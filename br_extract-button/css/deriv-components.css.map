{"version":3,"sources":["webpack://deriv-component.[name]/./src/components/button/button.scss","webpack://deriv-component.[name]/button.scss"],"names":[],"mappings":"AAAA;;uCCEuC;ADEvC;AAyCA;AAcA;;uCCpDuC;ADwDvC;;ECrDE;ADuFF;;;;;;;;EC9EE;ADqGF;;;;;;;EC7FE;ADyGF;;;;ECpGE;AD2HF;;;;ECtHE;ADyJF;;;;;;;ECjJE;ADmKF;;EChKE;ADoLF;;ECjLE;ADiMF;;;;;;;ECzLE;AD2MF;;;;;;ECpME;ADyNF;;;;;ECnNE;AD6NF;;;;;ECvNE;ADkPF;;;;;EC5OE;ADyQF;;CCtQC;AD4QD;;CCzQC;ADoTD;;;;EC/SE;AD0cF;AACA;EACI,cAAc;EACd,qBAAqB;EACrB,0BAA0B;EAC1B,eAAe;EACf,mBAAmB;EACnB,gBAAgB;EAChB,aAAa;EACb,SAAS;EACT,kBAAkB;EAClB,aAAa;EACb,gBAAgB;EAChB,sDAAsD;EACtD,UAAU;EACV,kBAAkB;EAClB,mBAnjBuB;EAgsBvB,iCAAgC;EA3IhC;IAzZI,gBA9C2B;IAiD3B,yBArJwC;IAwJxC,gBAoNU;IAjNV,qBAiZsD;IA9YtD,kBAqNW;IA/MX,gBAsNS;EAoLb;IACI,gBAAgB;IAChB,gBAAgB;IAChB,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,qBAAqB;EA1B7B;IA6BQ,qBAAqB;EAExB;IAEO,cA7jBe;EA+jBnB;IACI,mBArkBe;IA6kBf,iCAAgC;IATnC;MAIO,oCAxkBW;IAokBlB;MAOO,mBA3kBW;IAokBlB;MAWO,uBA/kBW;EAklBnB;IACI,mBAtlBe;IA8lBf,iCAAgC;IATnC;MAIO,mBAxlBW;IAolBlB;MAOO,mBA5lBW;IAqlBlB;MAWO,uBAhmBW;EAmkBtB;IAiCO,+BArlBqC;IAslBrC,mBAAmB;IAlC1B;MAqCW,0BAzlBiC;EA6lB7C;IACI,uBAAuB;IAEvB;MAUI,iCAAgC;MAVnC;QAEO,cA9mBW;MA4mBlB;QAKO,oCAjnBW;MA4mBlB;QAQO,cApnBW;MA4mBlB;QAYO,uBAxnBW;IA2nBnB;MACI,yBA/nBe;MA6oBf,iCAAgC;MAfnC;QAIO,cAloBW;MA8nBlB;QAOO,yBApoBW;QAqoBX,cAroBW;QAsoBX,kCAAkC;MATzC;QAYO,yBA1oBW;QA2oBX,cA3oBW;MA8nBlB;QAiBO,uBA/oBW;IA4mBtB;MAuCO,+BApoBqC;MAqoBrC,oBAAoB;MACpB,qCAAsC;MACtC,8BAA8B;EAGtC;IACI,mBAlpBmB;IA6pBnB,iCAAgC;IAZnC;MAIO,cAAc;MAAE,0CAAyC;IAJhE;MAOO,mBAAmB;MAAE,0CAAyC;IAPrE;MAUO,cAAc;MAAE,0CAAyC;IAVhE;MAcO,uBAAuB;MAAE,0CAAyC;IAdzE;MAiBO,kCAAkC;MAClC,gDAAiD;MAAE;MACnD,8BAA8B;MAnBrC;QAsBW,qCAAsC;EAIlD;IACI,qCAlqB+C;IAmqB/C,uCAnqB+C;IAoqB/C,cAAc;IACd,kBAAkB;IAClB,iBAAiB;IACjB,gBAAgB;IAChB,iBAAiB;IAPpB;MAUO,cArqBwB;EA4gBpC;IA8JQ,WAAW;IACX,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,cAAc;IACd,aAAa;IACb,sBAAsB;IACtB,uBA7qB4B;IA8qB5B,YAAY;IACZ,4BAA4B;IAC5B,6BAA6B;IAC7B,cAAc;;AAItB;EACI;IACI,UAAU;IACV,WAAW;IACX,YAAY;IACZ,cAAc;IACd,aAAa;IACb,iBAAiB","file":"deriv-components.css","sourcesContent":["/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n\n/* stylelint-disable color-no-hex */\n$COLOR_BLACK      : #000000;\n$COLOR_GREEN_1    : #39b19d;\n$COLOR_GREEN_2    : #2d9f93;\n$COLOR_GREEN_3    : #21ce99;\n$COLOR_ORANGE     : #ff9933;\n$COLOR_DARK_ORANGE: #ff8802;\n$COLOR_PURPLE     : #4f60ae;\n$COLOR_RED        : #e31c4b;\n$COLOR_SKY_BLUE   : #2196f3;\n$COLOR_WHITE      : #ffffff;\n// Light theme\n$COLOR_LIGHT_BLACK_1        : rgba(0, 0, 0, 0.8);\n$COLOR_LIGHT_BLACK_2        : rgba(0, 0, 0, 0.4);\n$COLOR_LIGHT_BLACK_3        : rgba(0, 0, 0, 0.16);\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\n$COLOR_LIGHT_BLACK_4        : rgba(0, 0, 0, 0.04);\n$COLOR_LIGHT_BLACK_4_SOLID  : #f4f4f6;\n$COLOR_LIGHT_GRAY_1         : #999cac;\n$COLOR_LIGHT_GRAY_2         : rgba(153, 156, 172, 0.32);\n$COLOR_LIGHT_GREEN_GRADIENT : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\n$COLOR_LIGHT_RED_GRADIENT   : linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\n$COLOR_LIGHT_WHITE_GRADIENT : linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\n// Dark theme\n$COLOR_DARK_BLACK_GRADIENT : linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\n$COLOR_DARK_BLUE_1         : #0b0e18;\n$COLOR_DARK_BLUE_2         : #101320;\n$COLOR_DARK_BLUE_3         : #191c31;\n$COLOR_DARK_BLUE_4         : #202641;\n$COLOR_DARK_BLUE_5         : #2a3052;\n$COLOR_DARK_BLUE_6         : #555975;\n$COLOR_DARK_BLUE_7         : #7f8397;\n$COLOR_DARK_BLUE_8         : rgba(127, 131, 151, 0.3);\n$COLOR_DARK_GRAY_1         : #282a37;\n$COLOR_DARK_GRAY_2         : #303342;\n$COLOR_DARK_GREEN_GRADIENT : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\n$COLOR_DARK_RED_GRADIENT   : linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\n$COLOR_DARK_GRAY_1         : #282a37;\n$COLOR_DARK_GRAY_2         : #303342;\n$COLOR_DARK_GRAY_3         : #555975;\n/* stylelint-enable color-no-hex */\n\n$BORDER_RADIUS: 4px;\n\n$MAX_CONTAINER_WIDTH: 1440px;\n\n$POSITIONS_DRAWER_WIDTH  : 240px;\n$POSITIONS_DRAWER_MARGIN : 8px;\n\n$HEADER_HEIGHT: 48px;\n$FOOTER_HEIGHT: 35px;\n\n$SIDEBAR_WIDTH: 240px;\n\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n\n/*\n * SASS interpolation\n */\n// Requires the calc-interpolation function which can also be used independently\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\n    $b: $min-value - $a * $min-screen;\n\n    $sign: '+';\n    @if ($b < 0) {\n        $sign: '-';\n        $b: abs($b);\n    }\n    @return calc(#{$a*100}vw #{$sign} #{$b});\n}\n\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\n    & {\n        @each $property in $properties {\n            #{$property}: $min-value;\n        }\n        @media screen and (min-width: $min-screen) {\n            @each $property in $properties {\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\n            }\n        }\n        @media screen and (min-width: $max-screen) {\n            @each $property in $properties {\n                #{$property}: $max-value;\n            }\n        }\n    }\n}\n\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n@function em($px, $base: $BASE_FONT_SIZE) {\n    $list: ();\n    @if length($px) != 1 {\n        @for $i from 1 through length($px) {\n            $val_em: (nth($px, $i) / $base) * 1em;\n            $list: append($list, $val_em, space);\n        }\n        @return $list;\n    }\n    @else {\n        @return ($px / $base) * 1em;\n    }\n}\n\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\n    #{$property}: em($values, $font-size);\n}\n\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n@function generate-typefaces() {\n    $typeface_list: ();\n    @each $fontsize_name, $size in $FONT_SIZES {\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\n            @each $color_name, $color in $FONT_COLORS {\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\n                    $val: ($size, $text_align, $weight, $color);\n                    $typeface: ($key: $val);\n                    $typeface_list: map-merge($typeface_list, $typeface);\n                }\n            }\n        }\n    }\n    // @debug $typeface_list; /* uncomment to debug */\n    @return $typeface_list;\n}\n\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\n    @if $size {\n        font-size: $size;\n    }\n    @if $colour {\n        color: $colour;\n    }\n    @if $weight {\n        font-weight: $weight;\n    }\n    @if $tt {\n        text-transform: $tt;\n    }\n    @if $align {\n        text-align: $align;\n    }\n    @if $size == 1.6em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\n    }\n    @else if $size == 1.4em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\n    }\n    @else if $size == 1.2em {\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\n    }\n    @else {\n        line-height: unset;\n    }\n}\n\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n@mixin typeface($var, $tt: capitalize) {\n    $typeface_config: map-get($map: $TYPEFACES_LIST, $key: $var);\n\n    $size  : nth($typeface_config, 1); // font-size\n    $align : nth($typeface_config, 2); // text-align\n    $weight: nth($typeface_config, 3); // font-weight\n    $color : nth($typeface_config, 4); // color\n    @include setTypeface($size, $align, $weight, $color, $tt);\n}\n\n/*\n * Range Slider Thumb styling is set here\n */\n@mixin thumbStyle() {\n    appearance: none;\n    width: 1em;\n    height: 1em;\n    border-radius: 100%;\n    border: 0;\n    cursor: pointer;\n    transition: box-shadow 0.2s;\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\n\n    &:hover {\n        @include themify($themes) {\n            box-shadow: 0 0 0 0.5em themed('slider_hover_color');\n        }\n    }\n}\n\n/*\n * SVG icons colors\n */\n@mixin colorIcon($colors...) {\n    @for $i from 1 through length($colors) {\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-fill {\n            fill: nth($colors, $i);\n        }\n        /* postcss-bem-linter: ignore */\n        .color#{$i}-stroke {\n            stroke: nth($colors, $i);\n        }\n    }\n}\n\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\n    animation: sk-stretchdelay $duration infinite ease-in-out;\n\n    @for $i from 1 through $count {\n        &--#{$i} {\n            animation-delay: -$duration + (($i - 1) * $phase);\n        }\n    }\n}\n\n/*\n * Implementation of themes\n * generate sets of themes keys object property (dark / light)\n * @param $themes - themes property\n * Usage example:\n   @include themify($themes) { color: themed('background_color') }\n */\n@mixin themify($themes) {\n    @each $theme, $map in $themes {\n        .theme--#{$theme} & {\n            $theme-map: () !global;\n            @each $key, $submap in $map {\n                $value: map-get(map-get($themes, $theme), '#{$key}');\n                $theme-map: map-merge($theme-map, ($key: $value)) !global;\n            }\n            @content;\n            $theme-map: null !global;\n        }\n    }\n}\n\n/*\n * Generate typefaces key-value pair of themefy object\n * Should be inside themify mixins\n * Example:\n   @include themify($themes) { border-color: 1px solid themed('background_color') }\n */\n@function themed($key) {\n    @return map-get($theme-map, $key);\n}\n\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin tooltipColor($color) {\n    &:before {\n        background: $color;\n    }\n    &:after, &[data-tooltip-pos=top]:after {\n        border-top-color: $color;\n    }\n    &[data-tooltip-pos=right]:after {\n        border-top-color: transparent;\n        border-right-color: $color;\n    }\n    &[data-tooltip-pos=left]:after {\n        border-top-color: transparent;\n        border-left-color: $color;\n    }\n    &[data-tooltip-pos=bottom]:after {\n        border-top-color: transparent;\n        border-bottom-color: $color;\n    }\n}\n\n/*\n * Themified Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n@mixin themifiedTooltipColor($color) {\n    @include themify($themes) {\n        &:before {\n            background: themed($color);\n        }\n        &:after, &[data-tooltip-pos=top]:after {\n            border-top-color: themed($color);\n        }\n        &[data-tooltip-pos=right]:after {\n            border-top-color: transparent;\n            border-right-color: themed($color);\n        }\n        &[data-tooltip-pos=left]:after {\n            border-top-color: transparent;\n            border-left-color: themed($color);\n        }\n        &[data-tooltip-pos=bottom]:after {\n            border-top-color: transparent;\n            border-bottom-color: themed($color);\n        }\n    }\n}\n\n/*\n    Constants\n*/\n$FONT_STACK: roboto, sans-serif;\n$BASE_FONT_SIZE: 10px;\n\n/*\n    Variables\n*/\n$FONT_SIZES: (\n    'heading'   em(30px),\n    'large'     em(28px),\n    'title'     em(16px),\n    'paragraph' em(14px),\n    'small'     em(12px),\n    'xsmall'    em(10px),\n    'xxsmall'   em(8px),\n    'xxxsmall'  em(6px),\n);\n\n$FONT_COLORS: (\n    'active'   $COLOR_WHITE,\n    'black'    $COLOR_LIGHT_BLACK_1,\n    'grey'     $COLOR_LIGHT_BLACK_2,\n    'disabled' $COLOR_LIGHT_BLACK_3,\n    'green'    $COLOR_GREEN_1,\n    'red'      $COLOR_RED,\n    'orange'   $COLOR_ORANGE,\n);\n\n$FONT_WEIGHTS: (\n    'bold'     700,\n    'semibold' 500,\n    'normal'   400,\n    'light'    300,\n);\n\n$TEXT_ALIGN: (\n    'center' center,\n    'left'   left,\n    'right'  right,\n);\n\n$LINEHEIGHTS: (\n    'large' : 1.75,\n    'medium': 1.5,\n    'small' : 1.25,\n);\n\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n$TYPEFACES_LIST: generate-typefaces();\n\n$themes: (\n    light: (\n        active_color                     : $COLOR_LIGHT_GRAY_1,\n        animation_blink_name             : blinking-white,\n        background_button_color          : $COLOR_LIGHT_GRAY_2,\n        background_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_container_color       : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_cover                 : $COLOR_LIGHT_BLACK_4,\n        background_icon_color            : $COLOR_LIGHT_BLACK_4_SOLID,\n        background_modal_overlay         : transparentize($COLOR_WHITE, 0.04),\n        background_tooltip_color         : $COLOR_LIGHT_BLACK_1,\n        barspinner_color                 : $COLOR_DARK_BLUE_5,\n        border_color                     : $COLOR_LIGHT_BLACK_4_SOLID,\n        border_hover_color               : $COLOR_LIGHT_GRAY_1,\n        border_outline_color             : $COLOR_LIGHT_GRAY_2,\n        btn_purchase_disabled_accent     : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        btn_purchase_disabled_bg         : $COLOR_LIGHT_BLACK_3_SOLID_2,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_LIGHT_BLACK_4_SOLID,\n        chart_gradient_color             : $COLOR_LIGHT_WHITE_GRADIENT,\n        chart_line_color                 : $COLOR_LIGHT_GRAY_1,\n        container_color                  : $COLOR_WHITE,\n        container_secondary_color        : $COLOR_WHITE,\n        disabled_color                   : $COLOR_LIGHT_BLACK_3,\n        disabled_icon_color              : $COLOR_LIGHT_BLACK_3_SOLID_1,\n        divider_color                    : $COLOR_LIGHT_BLACK_4,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        hover_color                      : $COLOR_LIGHT_BLACK_4,\n        icon_color                       : $COLOR_DARK_BLUE_5,\n        icon_active_color                : $COLOR_LIGHT_BLACK_4_SOLID,\n        icon_start_time                  : $COLOR_LIGHT_GRAY_1,\n        initial_loader_background        : $COLOR_LIGHT_BLACK_4_SOLID,\n        loader_background                : $COLOR_BLACK,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        lost_gradient_color              : $COLOR_LIGHT_RED_GRADIENT,\n        market_overlay_background        : transparentize($COLOR_WHITE, 0.28),\n        navbar_active_color              : $COLOR_LIGHT_BLACK_1,\n        navbar_background_color          : $COLOR_WHITE,\n        slider_background_color          : $COLOR_WHITE,\n        slider_hover_color               : $COLOR_LIGHT_BLACK_3,\n        slider_icon_color                : $COLOR_LIGHT_GRAY_1,\n        sidebar_background_color         : $COLOR_LIGHT_GRAY_2,\n        spinner_background_color         : $COLOR_DARK_BLUE_5,\n        tab_active_background_color      : $COLOR_WHITE,\n        tab_background_color             : $COLOR_LIGHT_BLACK_4_SOLID,\n        tab_hover_color                  : $COLOR_LIGHT_BLACK_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_LIGHT_BLACK_1,\n        text_primary_color               : $COLOR_LIGHT_BLACK_1,\n        text_secondary_color             : $COLOR_LIGHT_BLACK_2,\n        tick_step_default                : $COLOR_LIGHT_BLACK_4,\n        tick_step_marked                 : $COLOR_LIGHT_GRAY_1,\n        reports_tick_step                : $COLOR_LIGHT_BLACK_4,\n        toggle_button_hover_background   : $COLOR_LIGHT_BLACK_4,\n        tooltip_background_color         : $COLOR_LIGHT_BLACK_1,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_LIGHT_GRAY_1,\n        wip_btn_color                    : $COLOR_WHITE,\n        wip_color                        : $COLOR_DARK_BLUE_5,\n        won_gradient_color               : $COLOR_LIGHT_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n    ),\n    dark: (\n        active_color                     : $COLOR_DARK_BLUE_5,\n        animation_blink_name             : blinking-dark-blue-2,\n        background_button_color          : $COLOR_DARK_BLUE_5,\n        background_color                 : $COLOR_DARK_BLUE_1,\n        background_container_color       : $COLOR_DARK_BLUE_3,\n        background_cover                 : $COLOR_DARK_BLUE_2,\n        background_icon_color            : $COLOR_DARK_BLUE_5,\n        background_modal_overlay         : transparentize($COLOR_DARK_BLUE_3, 0.04),\n        background_tooltip_color         : $COLOR_DARK_BLUE_5,\n        barspinner_color                 : $COLOR_WHITE,\n        border_color                     : $COLOR_DARK_BLUE_2,\n        border_hover_color               : $COLOR_DARK_BLUE_7,\n        border_outline_color             : $COLOR_DARK_BLUE_8,\n        btn_purchase_disabled_accent     : $COLOR_DARK_GRAY_2,\n        btn_purchase_disabled_bg         : $COLOR_DARK_GRAY_1,\n        btn_close_market_bg              : $COLOR_ORANGE,\n        btn_close_market_color           : $COLOR_WHITE,\n        cell_hover_color                 : $COLOR_DARK_BLUE_4,\n        chart_gradient_color             : $COLOR_DARK_BLACK_GRADIENT,\n        chart_line_color                 : $COLOR_WHITE,\n        container_color                  : $COLOR_DARK_BLUE_2,\n        container_secondary_color        : $COLOR_DARK_BLUE_3,\n        disabled_color                   : $COLOR_DARK_BLUE_8,\n        disabled_icon_color              : $COLOR_DARK_BLUE_8,\n        divider_color                    : $COLOR_DARK_BLUE_5,\n        deriv_green_color                : $COLOR_GREEN_3,\n        error_color                      : $COLOR_RED,\n        label_default_color              : $COLOR_LIGHT_BLACK_4_SOLID,\n        label_default_background         : $COLOR_LIGHT_GRAY_1,\n        label_warn_color                 : $COLOR_ORANGE,\n        label_warn_background            : transparentize($COLOR_ORANGE, 0.84),\n        label_success_color              : $COLOR_GREEN_1,\n        label_success_background         : transparentize($COLOR_GREEN_1, 0.84),\n        label_danger_color               : $COLOR_RED,\n        label_danger_background          : transparentize($COLOR_RED, 0.84),\n        label_info_color                 : $COLOR_SKY_BLUE,\n        label_info_background            : transparentize($COLOR_SKY_BLUE, 0.84),\n        market_overlay_background        : transparentize($COLOR_DARK_BLUE_2, 0.44),\n        hover_color                      : $COLOR_DARK_BLUE_3,\n        icon_color                       : $COLOR_WHITE,\n        icon_active_color                : $COLOR_DARK_BLUE_7,\n        icon_start_time                  : $COLOR_WHITE,\n        initial_loader_background        : $COLOR_DARK_BLUE_2,\n        loader_background                : $COLOR_WHITE,\n        lost_gradient_color              : $COLOR_DARK_RED_GRADIENT,\n        navbar_active_color              : $COLOR_WHITE,\n        navbar_background_color          : $COLOR_DARK_BLUE_5,\n        slider_background_color          : $COLOR_DARK_BLUE_8,\n        slider_hover_color               : $COLOR_DARK_BLUE_8,\n        slider_icon_color                : $COLOR_PURPLE,\n        spinner_background_color         : $COLOR_WHITE,\n        tab_active_background_color      : $COLOR_DARK_BLUE_3,\n        tab_background_color             : $COLOR_DARK_BLUE_2,\n        tab_hover_color                  : $COLOR_DARK_BLUE_4,\n        text_active_color                : $COLOR_WHITE,\n        text_color                       : $COLOR_WHITE,\n        text_primary_color               : $COLOR_DARK_BLUE_7,\n        text_secondary_color             : $COLOR_DARK_BLUE_7,\n        tick_step_default                : $COLOR_DARK_BLUE_3,\n        tick_step_marked                 : $COLOR_WHITE,\n        reports_tick_step                : $COLOR_DARK_BLUE_7,\n        toggle_button_hover_background   : $COLOR_DARK_BLUE_4,\n        tooltip_background_color         : $COLOR_DARK_BLUE_5,\n        tooltip_background_error         : $COLOR_RED,\n        trade_carousel_indicator         : $COLOR_WHITE,\n        wip_btn_color                    : $COLOR_DARK_BLUE_2,\n        wip_color                        : $COLOR_WHITE,\n        won_gradient_color               : $COLOR_DARK_GREEN_GRADIENT,\n        won_color                        : $COLOR_GREEN_1,\n        loss_color                       : $COLOR_RED,\n    ),\n);\n\n/** @define btn */\n.btn {\n    font-size: 1em;\n    display: inline-block;\n    touch-action: manipulation;\n    cursor: pointer;\n    white-space: nowrap;\n    padding: 0 1.6em;\n    margin: 1.6em;\n    border: 0;\n    border-radius: 4px;\n    height: 3.2em; // 32px\n    min-width: 9.6em; // 96px\n    transition: all 0.2s cubic-bezier(0.65, 0.05, 0.36, 1);\n    outline: 0;\n    position: relative;\n    background: $COLOR_GREEN_1;\n\n    &__text {\n        @include typeface(--paragraph-center-bold-black, unset);\n    }\n    &--link {\n        max-width: 220px;\n        margin: 1em auto;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        text-decoration: none;\n    }\n    &:not([disabled]):hover {\n        text-decoration: none;\n    }\n    &--primary {\n        .btn__text {\n            color: $COLOR_WHITE;\n        }\n        &--orange {\n            background: $COLOR_ORANGE;\n\n            &:hover:not([disabled]) {\n                background: rgba($COLOR_ORANGE, 0.84);\n            }\n            &:active:not([disabled]) {\n                background: $COLOR_ORANGE;\n            }\n            /* postcss-bem-linter: ignore */\n            &.effect:focus:not(:active):after {\n                border: 0 solid $COLOR_ORANGE;\n            }\n        }\n        &--green {\n            background: $COLOR_GREEN_1;\n\n            &:hover:not([disabled]) {\n                background: $COLOR_GREEN_2;\n            }\n            &:active:not([disabled]) {\n                background: $COLOR_GREEN_1;\n            }\n            /* postcss-bem-linter: ignore */\n            &.effect:focus:not(:active):after {\n                border: 0 solid $COLOR_GREEN_1;\n            }\n        }\n        &:disabled, &[disabled] {\n            background: $COLOR_LIGHT_BLACK_4;\n            cursor: not-allowed;\n\n            .btn__text {\n                color: $COLOR_LIGHT_BLACK_4;\n            }\n        }\n    }\n    &--secondary {\n        background: transparent;\n\n        &--orange {\n            .btn__text {\n                color: $COLOR_ORANGE;\n            }\n            &:hover:not([disabled]) {\n                background: rgba($COLOR_ORANGE, 0.16);\n            }\n            &:active:not([disabled]) {\n                color: $COLOR_ORANGE;\n            }\n            /* postcss-bem-linter: ignore */\n            &.effect:focus:not(:active):after {\n                border: 0 solid $COLOR_ORANGE;\n            }\n        }\n        &--green {\n            border: 1px solid $COLOR_GREEN_1;\n\n            .btn__text {\n                color: $COLOR_GREEN_1;\n            }\n            &:hover:not([disabled]) {\n                border: 1px solid $COLOR_GREEN_2;\n                color: $COLOR_GREEN_2;\n                background: rgba(76, 175, 80, 0.1);\n            }\n            &:active:not([disabled]) {\n                border: 1px solid $COLOR_GREEN_1;\n                color: $COLOR_GREEN_1;\n            }\n            /* postcss-bem-linter: ignore */\n            &.effect:focus:not(:active):after {\n                border: 0 solid $COLOR_GREEN_1;\n            }\n        }\n        &:disabled, &[disabled] {\n            background: $COLOR_LIGHT_BLACK_4;\n            border: 0 !important;\n            color: $COLOR_LIGHT_BLACK_4 !important;\n            cursor: not-allowed !important;\n        }\n    }\n    &--flat {\n        background: $COLOR_WHITE;\n\n        .btn__text {\n            color: #4c5794; /* stylelint-disable-line color-no-hex */\n        }\n        &:hover:not([disabled]) {\n            background: #f2f3f8; /* stylelint-disable-line color-no-hex */\n        }\n        &:active:not([disabled]) span {\n            color: #4c5794; /* stylelint-disable-line color-no-hex */\n        }\n        /* postcss-bem-linter: ignore */\n        &.effect:focus:not(:active):after {\n            border: 0 solid #4c5794; /* stylelint-disable-line color-no-hex */\n        }\n        &:disabled, &[disabled] {\n            background: transparent !important;\n            border: 1px solid $COLOR_LIGHT_BLACK_4 !important; /* stylelint-disable-line color-no-hex */\n            cursor: not-allowed !important;\n\n            .btn__text {\n                color: $COLOR_LIGHT_BLACK_4 !important;\n            }\n        }\n    }\n    &--alternate {\n        background: $COLOR_LIGHT_GRAY_2;\n        border-color: $COLOR_LIGHT_GRAY_2;\n        padding: 8px 0;\n        text-align: center;\n        line-height: 100%;\n        font-size: 1.2em;\n        font-weight: bold;\n\n        .btn__text {\n            color: $COLOR_DARK_BLUE_1;\n        }\n    }\n    /* postcss-bem-linter: ignore */\n    &.effect:focus:not(:active):after {\n        content: '';\n        position: absolute;\n        top: -0.1em;\n        left: -0.1em;\n        bottom: -0.1em;\n        right: -0.1em;\n        border-radius: inherit;\n        border: 0 solid $COLOR_DARK_BLUE_5;\n        opacity: 0.4;\n        animation: buttonEffect 0.4s;\n        animation-fill-mode: forwards;\n        display: block;\n    }\n}\n\n@keyframes buttonEffect {\n    to {\n        opacity: 0;\n        top: -0.6em;\n        left: -0.6em;\n        bottom: -0.6em;\n        right: -0.6em;\n        border-width: 6px;\n    }\n}\n","/*------------------------------------*\n *  # Constants\n *------------------------------------*/\n/* stylelint-disable color-no-hex */\n/* stylelint-enable color-no-hex */\n/*------------------------------------*\n *  # SASS Mixins and Functions\n *------------------------------------*/\n/*\n * SASS interpolation\n */\n/*\n * PX to EM\n * @param $px - px value to be converted\n * @param $base - base font size (in `em`)\n * Note: 'em' values are calculate based on the element font-size\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\n * Usage example:\n    padding: em(16px, 1.6em); // font-size in 'em'\n */\n/*\n * Set property by passing a property name, and values.\n * @param $property name - padding, margin etc.\n * @param $values        - values in `px` (space separated for multiple values)\n * @param $font-size     - base font-size in `em`\n * Usage example:\n   @include toEm(padding, 8px 16px 8px, 1.6em);\n */\n/*\n * Generate typefaces key-value pair of variable name and config\n * Example:\n   --paragraph-center-bold-black: (14px, center, bold, black)\n */\n/*\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\n * Usage example:\n   @include setTypeface(16px, bold, black, uppercase);\n */\n/*\n * Set typefaces by passing a typeface variable name\n * @param $var   - typeface variable\n * @param $tt    - text-transform property\n * @param $align - text-align property\n * Usage example:\n   @include typeface(--paragraph-bold-black, uppercase, center);\n */\n/*\n * Range Slider Thumb styling is set here\n */\n/*\n * SVG icons colors\n */\n/*\n * Bar Spinner Animation\n * @param $count    - number of bars\n * @param $duration - duration of animation\n * @param $phase    - each bar phase change delay\n * Usage example:\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\n */\n/*\n * Implementation of themes\n * generate sets of themes keys object property (dark / light)\n * @param $themes - themes property\n * Usage example:\n   @include themify($themes) { color: themed('background_color') }\n */\n/*\n * Generate typefaces key-value pair of themefy object\n * Should be inside themify mixins\n * Example:\n   @include themify($themes) { border-color: 1px solid themed('background_color') }\n */\n/*\n * Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n/*\n * Themified Tooltip colors\n * @param $color - color property\n * Usage example:\n   @include tooltipColor($COLOR_RED);\n */\n/*\n    Constants\n*/\n/*\n    Variables\n*/\n/*\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\n    Variables name example: --title-center-semibold-red\n */\n/** @define btn */\n.btn {\n  font-size: 1em;\n  display: inline-block;\n  touch-action: manipulation;\n  cursor: pointer;\n  white-space: nowrap;\n  padding: 0 1.6em;\n  margin: 1.6em;\n  border: 0;\n  border-radius: 4px;\n  height: 3.2em;\n  min-width: 9.6em;\n  transition: all 0.2s cubic-bezier(0.65, 0.05, 0.36, 1);\n  outline: 0;\n  position: relative;\n  background: #39b19d;\n  /* postcss-bem-linter: ignore */ }\n  .btn__text {\n    font-size: 1.4em;\n    color: rgba(0, 0, 0, 0.8);\n    font-weight: 700;\n    text-transform: unset;\n    text-align: center;\n    line-height: 1.5; }\n  .btn--link {\n    max-width: 220px;\n    margin: 1em auto;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    text-decoration: none; }\n  .btn:not([disabled]):hover {\n    text-decoration: none; }\n  .btn--primary .btn__text {\n    color: #ffffff; }\n  .btn--primary--orange {\n    background: #ff9933;\n    /* postcss-bem-linter: ignore */ }\n    .btn--primary--orange:hover:not([disabled]) {\n      background: rgba(255, 153, 51, 0.84); }\n    .btn--primary--orange:active:not([disabled]) {\n      background: #ff9933; }\n    .btn--primary--orange.effect:focus:not(:active):after {\n      border: 0 solid #ff9933; }\n  .btn--primary--green {\n    background: #39b19d;\n    /* postcss-bem-linter: ignore */ }\n    .btn--primary--green:hover:not([disabled]) {\n      background: #2d9f93; }\n    .btn--primary--green:active:not([disabled]) {\n      background: #39b19d; }\n    .btn--primary--green.effect:focus:not(:active):after {\n      border: 0 solid #39b19d; }\n  .btn--primary:disabled, .btn--primary[disabled] {\n    background: rgba(0, 0, 0, 0.04);\n    cursor: not-allowed; }\n    .btn--primary:disabled .btn__text, .btn--primary[disabled] .btn__text {\n      color: rgba(0, 0, 0, 0.04); }\n  .btn--secondary {\n    background: transparent; }\n    .btn--secondary--orange {\n      /* postcss-bem-linter: ignore */ }\n      .btn--secondary--orange .btn__text {\n        color: #ff9933; }\n      .btn--secondary--orange:hover:not([disabled]) {\n        background: rgba(255, 153, 51, 0.16); }\n      .btn--secondary--orange:active:not([disabled]) {\n        color: #ff9933; }\n      .btn--secondary--orange.effect:focus:not(:active):after {\n        border: 0 solid #ff9933; }\n    .btn--secondary--green {\n      border: 1px solid #39b19d;\n      /* postcss-bem-linter: ignore */ }\n      .btn--secondary--green .btn__text {\n        color: #39b19d; }\n      .btn--secondary--green:hover:not([disabled]) {\n        border: 1px solid #2d9f93;\n        color: #2d9f93;\n        background: rgba(76, 175, 80, 0.1); }\n      .btn--secondary--green:active:not([disabled]) {\n        border: 1px solid #39b19d;\n        color: #39b19d; }\n      .btn--secondary--green.effect:focus:not(:active):after {\n        border: 0 solid #39b19d; }\n    .btn--secondary:disabled, .btn--secondary[disabled] {\n      background: rgba(0, 0, 0, 0.04);\n      border: 0 !important;\n      color: rgba(0, 0, 0, 0.04) !important;\n      cursor: not-allowed !important; }\n  .btn--flat {\n    background: #ffffff;\n    /* postcss-bem-linter: ignore */ }\n    .btn--flat .btn__text {\n      color: #4c5794;\n      /* stylelint-disable-line color-no-hex */ }\n    .btn--flat:hover:not([disabled]) {\n      background: #f2f3f8;\n      /* stylelint-disable-line color-no-hex */ }\n    .btn--flat:active:not([disabled]) span {\n      color: #4c5794;\n      /* stylelint-disable-line color-no-hex */ }\n    .btn--flat.effect:focus:not(:active):after {\n      border: 0 solid #4c5794;\n      /* stylelint-disable-line color-no-hex */ }\n    .btn--flat:disabled, .btn--flat[disabled] {\n      background: transparent !important;\n      border: 1px solid rgba(0, 0, 0, 0.04) !important;\n      /* stylelint-disable-line color-no-hex */\n      cursor: not-allowed !important; }\n      .btn--flat:disabled .btn__text, .btn--flat[disabled] .btn__text {\n        color: rgba(0, 0, 0, 0.04) !important; }\n  .btn--alternate {\n    background: rgba(153, 156, 172, 0.32);\n    border-color: rgba(153, 156, 172, 0.32);\n    padding: 8px 0;\n    text-align: center;\n    line-height: 100%;\n    font-size: 1.2em;\n    font-weight: bold; }\n    .btn--alternate .btn__text {\n      color: #0b0e18; }\n  .btn.effect:focus:not(:active):after {\n    content: '';\n    position: absolute;\n    top: -0.1em;\n    left: -0.1em;\n    bottom: -0.1em;\n    right: -0.1em;\n    border-radius: inherit;\n    border: 0 solid #2a3052;\n    opacity: 0.4;\n    animation: buttonEffect 0.4s;\n    animation-fill-mode: forwards;\n    display: block; }\n\n@keyframes buttonEffect {\n  to {\n    opacity: 0;\n    top: -0.6em;\n    left: -0.6em;\n    bottom: -0.6em;\n    right: -0.6em;\n    border-width: 6px; } }\n"],"sourceRoot":""}