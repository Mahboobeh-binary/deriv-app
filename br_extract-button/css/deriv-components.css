/*------------------------------------*
 *  # Constants
 *------------------------------------*/
/* stylelint-disable color-no-hex */
/* stylelint-enable color-no-hex */
/*------------------------------------*
 *  # SASS Mixins and Functions
 *------------------------------------*/
/*
 * SASS interpolation
 */
/*
 * PX to EM
 * @param $px - px value to be converted
 * @param $base - base font size (in `em`)
 * Note: 'em' values are calculate based on the element font-size
 *       to properly converts 'px' to 'em', please pass in the element font-size with it
 * Usage example:
    padding: em(16px, 1.6em); // font-size in 'em'
 */
/*
 * Set property by passing a property name, and values.
 * @param $property name - padding, margin etc.
 * @param $values        - values in `px` (space separated for multiple values)
 * @param $font-size     - base font-size in `em`
 * Usage example:
   @include toEm(padding, 8px 16px 8px, 1.6em);
 */
/*
 * Generate typefaces key-value pair of variable name and config
 * Example:
   --paragraph-center-bold-black: (14px, center, bold, black)
 */
/*
 * Sets font-size, font-weight, color, text-transform, text-align and line-height
 * Usage example:
   @include setTypeface(16px, bold, black, uppercase);
 */
/*
 * Set typefaces by passing a typeface variable name
 * @param $var   - typeface variable
 * @param $tt    - text-transform property
 * @param $align - text-align property
 * Usage example:
   @include typeface(--paragraph-bold-black, uppercase, center);
 */
/*
 * Range Slider Thumb styling is set here
 */
/*
 * SVG icons colors
 */
/*
 * Bar Spinner Animation
 * @param $count    - number of bars
 * @param $duration - duration of animation
 * @param $phase    - each bar phase change delay
 * Usage example:
   @include createBarspinnerAnimation(5, 1.2s, 0,1);
 */
/*
 * Implementation of themes
 * generate sets of themes keys object property (dark / light)
 * @param $themes - themes property
 * Usage example:
   @include themify($themes) { color: themed('background_color') }
 */
/*
 * Generate typefaces key-value pair of themefy object
 * Should be inside themify mixins
 * Example:
   @include themify($themes) { border-color: 1px solid themed('background_color') }
 */
/*
 * Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
 * Themified Tooltip colors
 * @param $color - color property
 * Usage example:
   @include tooltipColor($COLOR_RED);
 */
/*
    Constants
*/
/*
    Variables
*/
/*
    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.
    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.
    Variables name example: --title-center-semibold-red
 */
/** @define btn */
.btn {
  font-size: 1em;
  display: inline-block;
  touch-action: manipulation;
  cursor: pointer;
  white-space: nowrap;
  padding: 0 1.6em;
  margin: 1.6em;
  border: 0;
  border-radius: 4px;
  height: 3.2em;
  min-width: 9.6em;
  transition: all 0.2s cubic-bezier(0.65, 0.05, 0.36, 1);
  outline: 0;
  position: relative;
  background: #39b19d;
  /* postcss-bem-linter: ignore */ }
  .btn__text {
    font-size: 1.4em;
    color: rgba(0, 0, 0, 0.8);
    font-weight: 700;
    text-transform: unset;
    text-align: center;
    line-height: 1.5; }
  .btn--link {
    max-width: 220px;
    margin: 1em auto;
    display: flex;
    align-items: center;
    justify-content: center;
    text-decoration: none; }
  .btn:not([disabled]):hover {
    text-decoration: none; }
  .btn--primary .btn__text {
    color: #ffffff; }
  .btn--primary--orange {
    background: #ff9933;
    /* postcss-bem-linter: ignore */ }
    .btn--primary--orange:hover:not([disabled]) {
      background: rgba(255, 153, 51, 0.84); }
    .btn--primary--orange:active:not([disabled]) {
      background: #ff9933; }
    .btn--primary--orange.effect:focus:not(:active):after {
      border: 0 solid #ff9933; }
  .btn--primary--green {
    background: #39b19d;
    /* postcss-bem-linter: ignore */ }
    .btn--primary--green:hover:not([disabled]) {
      background: #2d9f93; }
    .btn--primary--green:active:not([disabled]) {
      background: #39b19d; }
    .btn--primary--green.effect:focus:not(:active):after {
      border: 0 solid #39b19d; }
  .btn--primary:disabled, .btn--primary[disabled] {
    background: rgba(0, 0, 0, 0.04);
    cursor: not-allowed; }
    .btn--primary:disabled .btn__text, .btn--primary[disabled] .btn__text {
      color: rgba(0, 0, 0, 0.04); }
  .btn--secondary {
    background: transparent; }
    .btn--secondary--orange {
      /* postcss-bem-linter: ignore */ }
      .btn--secondary--orange .btn__text {
        color: #ff9933; }
      .btn--secondary--orange:hover:not([disabled]) {
        background: rgba(255, 153, 51, 0.16); }
      .btn--secondary--orange:active:not([disabled]) {
        color: #ff9933; }
      .btn--secondary--orange.effect:focus:not(:active):after {
        border: 0 solid #ff9933; }
    .btn--secondary--green {
      border: 1px solid #39b19d;
      /* postcss-bem-linter: ignore */ }
      .btn--secondary--green .btn__text {
        color: #39b19d; }
      .btn--secondary--green:hover:not([disabled]) {
        border: 1px solid #2d9f93;
        color: #2d9f93;
        background: rgba(76, 175, 80, 0.1); }
      .btn--secondary--green:active:not([disabled]) {
        border: 1px solid #39b19d;
        color: #39b19d; }
      .btn--secondary--green.effect:focus:not(:active):after {
        border: 0 solid #39b19d; }
    .btn--secondary:disabled, .btn--secondary[disabled] {
      background: rgba(0, 0, 0, 0.04);
      border: 0 !important;
      color: rgba(0, 0, 0, 0.04) !important;
      cursor: not-allowed !important; }
  .btn--flat {
    background: #ffffff;
    /* postcss-bem-linter: ignore */ }
    .btn--flat .btn__text {
      color: #4c5794;
      /* stylelint-disable-line color-no-hex */ }
    .btn--flat:hover:not([disabled]) {
      background: #f2f3f8;
      /* stylelint-disable-line color-no-hex */ }
    .btn--flat:active:not([disabled]) span {
      color: #4c5794;
      /* stylelint-disable-line color-no-hex */ }
    .btn--flat.effect:focus:not(:active):after {
      border: 0 solid #4c5794;
      /* stylelint-disable-line color-no-hex */ }
    .btn--flat:disabled, .btn--flat[disabled] {
      background: transparent !important;
      border: 1px solid rgba(0, 0, 0, 0.04) !important;
      /* stylelint-disable-line color-no-hex */
      cursor: not-allowed !important; }
      .btn--flat:disabled .btn__text, .btn--flat[disabled] .btn__text {
        color: rgba(0, 0, 0, 0.04) !important; }
  .btn--alternate {
    background: rgba(153, 156, 172, 0.32);
    border-color: rgba(153, 156, 172, 0.32);
    padding: 8px 0;
    text-align: center;
    line-height: 100%;
    font-size: 1.2em;
    font-weight: bold; }
    .btn--alternate .btn__text {
      color: #0b0e18; }
  .btn.effect:focus:not(:active):after {
    content: '';
    position: absolute;
    top: -0.1em;
    left: -0.1em;
    bottom: -0.1em;
    right: -0.1em;
    border-radius: inherit;
    border: 0 solid #2a3052;
    opacity: 0.4;
    animation: buttonEffect 0.4s;
    animation-fill-mode: forwards;
    display: block; }

@keyframes buttonEffect {
  to {
    opacity: 0;
    top: -0.6em;
    left: -0.6em;
    bottom: -0.6em;
    right: -0.6em;
    border-width: 6px; } }


/*# sourceMappingURL=deriv-components.css.map*/