(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["modals"],{

/***/ "../../components/lib/dialog.css":
/*!****************************************************************************!*\
  !*** /Users/mahboobeh/source/deriv-app/packages/components/lib/dialog.css ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vY29tcG9uZW50cy9saWIvZGlhbG9nLmNzcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vVXNlcnMvbWFoYm9vYmVoL3NvdXJjZS9kZXJpdi1hcHAvcGFja2FnZXMvY29tcG9uZW50cy9saWIvZGlhbG9nLmNzcz85MTE0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../components/lib/dialog.css\n");

/***/ }),

/***/ "../../components/lib/dialog.js":
/*!***************************************************************************!*\
  !*** /Users/mahboobeh/source/deriv-app/packages/components/lib/dialog.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function(n,t){ true?module.exports=t(__webpack_require__(/*! react */ \"../../components/node_modules/react/index.js\"),__webpack_require__(/*! react-dom */ \"../../components/node_modules/react-dom/index.js\")):undefined}(window,function(__WEBPACK_EXTERNAL_MODULE__0__,__WEBPACK_EXTERNAL_MODULE__6__){return function(n){var t={};function I(g){if(t[g])return t[g].exports;var c=t[g]={i:g,l:!1,exports:{}};return n[g].call(c.exports,c,c.exports,I),c.l=!0,c.exports}return I.m=n,I.c=t,I.d=function(n,t,g){I.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:g})},I.r=function(n){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(n,\"__esModule\",{value:!0})},I.t=function(n,t){if(1&t&&(n=I(n)),8&t)return n;if(4&t&&\"object\"==typeof n&&n&&n.__esModule)return n;var g=Object.create(null);if(I.r(g),Object.defineProperty(g,\"default\",{enumerable:!0,value:n}),2&t&&\"string\"!=typeof n)for(var c in n)I.d(g,c,function(t){return n[t]}.bind(null,c));return g},I.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return I.d(t,\"a\",t),t},I.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},I.p=\"\",I(I.s=52)}({0:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__0__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vZXh0ZXJuYWwge1wicm9vdFwiOlwiUmVhY3RcIixcImNvbW1vbmpzXCI6XCJyZWFjdFwiLFwiY29tbW9uanMyXCI6XCJyZWFjdFwifT82MWRlIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV9fMF9fOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///0\\n\")},1:function(module,exports,__webpack_require__){eval(\"/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nif (false) { var throwOnDirectAccess, ReactIs; } else {\\n  // By explicitly using `prop-types` you are opting into new production behavior.\\n  // http://fb.me/prop-types-in-prod\\n  module.exports = __webpack_require__(3)();\\n}\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcz9kN2JjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoUmVhY3RJcy5pc0VsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///1\\n\")},10:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nfunction replaceClassName(origClass, classToRemove) {\\n  return origClass.replace(new RegExp('(^|\\\\\\\\s)' + classToRemove + '(?:\\\\\\\\s|$)', 'g'), '$1').replace(/\\\\s+/g, ' ').replace(/^\\\\s*|\\\\s*$/g, '');\\n}\\n\\nmodule.exports = function removeClass(element, className) {\\n  if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\\n};//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXJpdi1jb21wb25lbnQuW25hbWVdLy4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL2NsYXNzL3JlbW92ZUNsYXNzLmpzPzU0ZTciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiByZXBsYWNlQ2xhc3NOYW1lKG9yaWdDbGFzcywgY2xhc3NUb1JlbW92ZSkge1xuICByZXR1cm4gb3JpZ0NsYXNzLnJlcGxhY2UobmV3IFJlZ0V4cCgnKF58XFxcXHMpJyArIGNsYXNzVG9SZW1vdmUgKyAnKD86XFxcXHN8JCknLCAnZycpLCAnJDEnKS5yZXBsYWNlKC9cXHMrL2csICcgJykucmVwbGFjZSgvXlxccyp8XFxzKiQvZywgJycpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHJlbW92ZUNsYXNzKGVsZW1lbnQsIGNsYXNzTmFtZSkge1xuICBpZiAoZWxlbWVudC5jbGFzc0xpc3QpIGVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShjbGFzc05hbWUpO2Vsc2UgaWYgKHR5cGVvZiBlbGVtZW50LmNsYXNzTmFtZSA9PT0gJ3N0cmluZycpIGVsZW1lbnQuY2xhc3NOYW1lID0gcmVwbGFjZUNsYXNzTmFtZShlbGVtZW50LmNsYXNzTmFtZSwgY2xhc3NOYW1lKTtlbHNlIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdjbGFzcycsIHJlcGxhY2VDbGFzc05hbWUoZWxlbWVudC5jbGFzc05hbWUgJiYgZWxlbWVudC5jbGFzc05hbWUuYmFzZVZhbCB8fCAnJywgY2xhc3NOYW1lKSk7XG59OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///10\\n\")},2:function(module,exports,__webpack_require__){eval(\"var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\\n  Copyright (c) 2017 Jed Watson.\\n  Licensed under the MIT License (MIT), see\\n  http://jedwatson.github.io/classnames\\n*/\\n/* global define */\\n\\n(function () {\\n\\t'use strict';\\n\\n\\tvar hasOwn = {}.hasOwnProperty;\\n\\n\\tfunction classNames () {\\n\\t\\tvar classes = [];\\n\\n\\t\\tfor (var i = 0; i < arguments.length; i++) {\\n\\t\\t\\tvar arg = arguments[i];\\n\\t\\t\\tif (!arg) continue;\\n\\n\\t\\t\\tvar argType = typeof arg;\\n\\n\\t\\t\\tif (argType === 'string' || argType === 'number') {\\n\\t\\t\\t\\tclasses.push(arg);\\n\\t\\t\\t} else if (Array.isArray(arg) && arg.length) {\\n\\t\\t\\t\\tvar inner = classNames.apply(null, arg);\\n\\t\\t\\t\\tif (inner) {\\n\\t\\t\\t\\t\\tclasses.push(inner);\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else if (argType === 'object') {\\n\\t\\t\\t\\tfor (var key in arg) {\\n\\t\\t\\t\\t\\tif (hasOwn.call(arg, key) && arg[key]) {\\n\\t\\t\\t\\t\\t\\tclasses.push(key);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn classes.join(' ');\\n\\t}\\n\\n\\tif ( true && module.exports) {\\n\\t\\tclassNames.default = classNames;\\n\\t\\tmodule.exports = classNames;\\n\\t} else if (true) {\\n\\t\\t// register as 'classnames', consistent with npm package name\\n\\t\\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\\n\\t\\t\\treturn classNames;\\n\\t\\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\\n\\t\\t\\t\\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\\n\\t} else {}\\n}());\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vLi9ub2RlX21vZHVsZXMvY2xhc3NuYW1lcy9pbmRleC5qcz80ZDI2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICBDb3B5cmlnaHQgKGMpIDIwMTcgSmVkIFdhdHNvbi5cbiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlIChNSVQpLCBzZWVcbiAgaHR0cDovL2plZHdhdHNvbi5naXRodWIuaW8vY2xhc3NuYW1lc1xuKi9cbi8qIGdsb2JhbCBkZWZpbmUgKi9cblxuKGZ1bmN0aW9uICgpIHtcblx0J3VzZSBzdHJpY3QnO1xuXG5cdHZhciBoYXNPd24gPSB7fS5oYXNPd25Qcm9wZXJ0eTtcblxuXHRmdW5jdGlvbiBjbGFzc05hbWVzICgpIHtcblx0XHR2YXIgY2xhc3NlcyA9IFtdO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBhcmcgPSBhcmd1bWVudHNbaV07XG5cdFx0XHRpZiAoIWFyZykgY29udGludWU7XG5cblx0XHRcdHZhciBhcmdUeXBlID0gdHlwZW9mIGFyZztcblxuXHRcdFx0aWYgKGFyZ1R5cGUgPT09ICdzdHJpbmcnIHx8IGFyZ1R5cGUgPT09ICdudW1iZXInKSB7XG5cdFx0XHRcdGNsYXNzZXMucHVzaChhcmcpO1xuXHRcdFx0fSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGFyZykgJiYgYXJnLmxlbmd0aCkge1xuXHRcdFx0XHR2YXIgaW5uZXIgPSBjbGFzc05hbWVzLmFwcGx5KG51bGwsIGFyZyk7XG5cdFx0XHRcdGlmIChpbm5lcikge1xuXHRcdFx0XHRcdGNsYXNzZXMucHVzaChpbm5lcik7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSBpZiAoYXJnVHlwZSA9PT0gJ29iamVjdCcpIHtcblx0XHRcdFx0Zm9yICh2YXIga2V5IGluIGFyZykge1xuXHRcdFx0XHRcdGlmIChoYXNPd24uY2FsbChhcmcsIGtleSkgJiYgYXJnW2tleV0pIHtcblx0XHRcdFx0XHRcdGNsYXNzZXMucHVzaChrZXkpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBjbGFzc2VzLmpvaW4oJyAnKTtcblx0fVxuXG5cdGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuZXhwb3J0cykge1xuXHRcdGNsYXNzTmFtZXMuZGVmYXVsdCA9IGNsYXNzTmFtZXM7XG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBjbGFzc05hbWVzO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGRlZmluZS5hbWQgPT09ICdvYmplY3QnICYmIGRlZmluZS5hbWQpIHtcblx0XHQvLyByZWdpc3RlciBhcyAnY2xhc3NuYW1lcycsIGNvbnNpc3RlbnQgd2l0aCBucG0gcGFja2FnZSBuYW1lXG5cdFx0ZGVmaW5lKCdjbGFzc25hbWVzJywgW10sIGZ1bmN0aW9uICgpIHtcblx0XHRcdHJldHVybiBjbGFzc05hbWVzO1xuXHRcdH0pO1xuXHR9IGVsc2Uge1xuXHRcdHdpbmRvdy5jbGFzc05hbWVzID0gY2xhc3NOYW1lcztcblx0fVxufSgpKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQSxVQUVBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///2\\n\")},3:function(module,exports,__webpack_require__){\"use strict\";eval(\"/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\n\\n\\nvar ReactPropTypesSecret = __webpack_require__(4);\\n\\nfunction emptyFunction() {}\\nfunction emptyFunctionWithReset() {}\\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\\n\\nmodule.exports = function() {\\n  function shim(props, propName, componentName, location, propFullName, secret) {\\n    if (secret === ReactPropTypesSecret) {\\n      // It is still safe when called from React.\\n      return;\\n    }\\n    var err = new Error(\\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\\n      'Use PropTypes.checkPropTypes() to call them. ' +\\n      'Read more at http://fb.me/use-check-prop-types'\\n    );\\n    err.name = 'Invariant Violation';\\n    throw err;\\n  };\\n  shim.isRequired = shim;\\n  function getShim() {\\n    return shim;\\n  };\\n  // Important!\\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\\n  var ReactPropTypes = {\\n    array: shim,\\n    bool: shim,\\n    func: shim,\\n    number: shim,\\n    object: shim,\\n    string: shim,\\n    symbol: shim,\\n\\n    any: shim,\\n    arrayOf: getShim,\\n    element: shim,\\n    elementType: shim,\\n    instanceOf: getShim,\\n    node: shim,\\n    objectOf: getShim,\\n    oneOf: getShim,\\n    oneOfType: getShim,\\n    shape: getShim,\\n    exact: getShim,\\n\\n    checkPropTypes: emptyFunctionWithReset,\\n    resetWarningCache: emptyFunction\\n  };\\n\\n  ReactPropTypes.PropTypes = ReactPropTypes;\\n\\n  return ReactPropTypes;\\n};\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanM/ZDdhMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcblxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbigpIHt9XG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0KCkge31cbmVtcHR5RnVuY3Rpb25XaXRoUmVzZXQucmVzZXRXYXJuaW5nQ2FjaGUgPSBlbXB0eUZ1bmN0aW9uO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBzaGltKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgaWYgKHNlY3JldCA9PT0gUmVhY3RQcm9wVHlwZXNTZWNyZXQpIHtcbiAgICAgIC8vIEl0IGlzIHN0aWxsIHNhZmUgd2hlbiBjYWxsZWQgZnJvbSBSZWFjdC5cbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcihcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gICAgZXJyLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgdGhyb3cgZXJyO1xuICB9O1xuICBzaGltLmlzUmVxdWlyZWQgPSBzaGltO1xuICBmdW5jdGlvbiBnZXRTaGltKCkge1xuICAgIHJldHVybiBzaGltO1xuICB9O1xuICAvLyBJbXBvcnRhbnQhXG4gIC8vIEtlZXAgdGhpcyBsaXN0IGluIHN5bmMgd2l0aCBwcm9kdWN0aW9uIHZlcnNpb24gaW4gYC4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMuanNgLlxuICB2YXIgUmVhY3RQcm9wVHlwZXMgPSB7XG4gICAgYXJyYXk6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgZWxlbWVudFR5cGU6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbSxcblxuICAgIGNoZWNrUHJvcFR5cGVzOiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LFxuICAgIHJlc2V0V2FybmluZ0NhY2hlOiBlbXB0eUZ1bmN0aW9uXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///3\\n\")},33:function(module,exports){eval('function _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : {\\n    \"default\": obj\\n  };\\n}\\n\\nmodule.exports = _interopRequireDefault;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXJpdi1jb21wb25lbnQuW25hbWVdLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0LmpzPzRlYTQiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICBcImRlZmF1bHRcIjogb2JqXG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdDsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///33\\n')},34:function(module,exports,__webpack_require__){\"use strict\";eval('\\n\\nexports.__esModule = true;\\nexports.default = hasClass;\\n\\nfunction hasClass(element, className) {\\n  if (element.classList) return !!className && element.classList.contains(className);else return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\\n}\\n\\nmodule.exports = exports[\"default\"];//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXJpdi1jb21wb25lbnQuW25hbWVdLy4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL2NsYXNzL2hhc0NsYXNzLmpzP2M4M2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSBoYXNDbGFzcztcblxuZnVuY3Rpb24gaGFzQ2xhc3MoZWxlbWVudCwgY2xhc3NOYW1lKSB7XG4gIGlmIChlbGVtZW50LmNsYXNzTGlzdCkgcmV0dXJuICEhY2xhc3NOYW1lICYmIGVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKGNsYXNzTmFtZSk7ZWxzZSByZXR1cm4gKFwiIFwiICsgKGVsZW1lbnQuY2xhc3NOYW1lLmJhc2VWYWwgfHwgZWxlbWVudC5jbGFzc05hbWUpICsgXCIgXCIpLmluZGV4T2YoXCIgXCIgKyBjbGFzc05hbWUgKyBcIiBcIikgIT09IC0xO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbXCJkZWZhdWx0XCJdOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\\n//# sourceURL=webpack-internal:///34\\n')},4:function(module,exports,__webpack_require__){\"use strict\";eval(\"/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\n\\n\\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\\n\\nmodule.exports = ReactPropTypesSecret;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanM/NTliMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///4\\n\")},42:function(module,exports,__webpack_require__){eval(\"// extracted by mini-css-extract-plugin\\n    if(false) { var cssReload; }\\n  //# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXJpdi1jb21wb25lbnQuW25hbWVdLy4vc3JjL2NvbXBvbmVudHMvZGlhbG9nL2RpYWxvZy5zY3NzPzgwNzEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgLy8gMTU2NzY1NzY1NjYzMlxuICAgICAgdmFyIGNzc1JlbG9hZCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1ob3QtbG9hZGVyL2hvdE1vZHVsZVJlcGxhY2VtZW50LmpzXCIpKG1vZHVsZS5pZCwge1wiZmlsZU1hcFwiOlwie2ZpbGVOYW1lfVwifSk7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoY3NzUmVsb2FkKTtcbiAgICAgIG1vZHVsZS5ob3QuYWNjZXB0KHVuZGVmaW5lZCwgY3NzUmVsb2FkKTs7XG4gICAgfVxuICAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsZ0NBS0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///42\\n\")},48:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval(\"\\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\\nfunction _extends() {\\n  _extends = Object.assign || function (target) {\\n    for (var i = 1; i < arguments.length; i++) {\\n      var source = arguments[i];\\n\\n      for (var key in source) {\\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\\n          target[key] = source[key];\\n        }\\n      }\\n    }\\n\\n    return target;\\n  };\\n\\n  return _extends.apply(this, arguments);\\n}\\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\\nfunction _objectWithoutPropertiesLoose(source, excluded) {\\n  if (source == null) return {};\\n  var target = {};\\n  var sourceKeys = Object.keys(source);\\n  var key, i;\\n\\n  for (i = 0; i < sourceKeys.length; i++) {\\n    key = sourceKeys[i];\\n    if (excluded.indexOf(key) >= 0) continue;\\n    target[key] = source[key];\\n  }\\n\\n  return target;\\n}\\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\\nfunction _inheritsLoose(subClass, superClass) {\\n  subClass.prototype = Object.create(superClass.prototype);\\n  subClass.prototype.constructor = subClass;\\n  subClass.__proto__ = superClass;\\n}\\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\\nvar prop_types = __webpack_require__(1);\\n\\n// EXTERNAL MODULE: ./node_modules/dom-helpers/class/addClass.js\\nvar class_addClass = __webpack_require__(9);\\nvar addClass_default = /*#__PURE__*/__webpack_require__.n(class_addClass);\\n\\n// EXTERNAL MODULE: ./node_modules/dom-helpers/class/removeClass.js\\nvar class_removeClass = __webpack_require__(10);\\nvar removeClass_default = /*#__PURE__*/__webpack_require__.n(class_removeClass);\\n\\n// EXTERNAL MODULE: external {\\\"root\\\":\\\"React\\\",\\\"commonjs\\\":\\\"react\\\",\\\"commonjs2\\\":\\\"react\\\"}\\nvar external_root_React_commonjs_react_commonjs2_react_ = __webpack_require__(0);\\nvar external_root_React_commonjs_react_commonjs2_react_default = /*#__PURE__*/__webpack_require__.n(external_root_React_commonjs_react_commonjs2_react_);\\n\\n// EXTERNAL MODULE: external {\\\"commonjs\\\":\\\"react-dom\\\",\\\"commonjs2\\\":\\\"react-dom\\\",\\\"root\\\":\\\"ReactDOM\\\"}\\nvar external_commonjs_react_dom_commonjs2_react_dom_root_ReactDOM_ = __webpack_require__(6);\\nvar external_commonjs_react_dom_commonjs2_react_dom_root_ReactDOM_default = /*#__PURE__*/__webpack_require__.n(external_commonjs_react_dom_commonjs2_react_dom_root_ReactDOM_);\\n\\n// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/config.js\\n/* harmony default export */ var config = ({\\n  disabled: false\\n});\\n// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/TransitionGroupContext.js\\n\\n/* harmony default export */ var TransitionGroupContext = (external_root_React_commonjs_react_commonjs2_react_default.a.createContext(null));\\n// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/Transition.js\\n\\n\\n\\n\\n\\n\\n\\n\\nvar UNMOUNTED = 'unmounted';\\nvar EXITED = 'exited';\\nvar ENTERING = 'entering';\\nvar ENTERED = 'entered';\\nvar EXITING = 'exiting';\\n/**\\n * The Transition component lets you describe a transition from one component\\n * state to another _over time_ with a simple declarative API. Most commonly\\n * it's used to animate the mounting and unmounting of a component, but can also\\n * be used to describe in-place transition states as well.\\n *\\n * ---\\n *\\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\\n * transitions in CSS, you'll probably want to use\\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\\n * instead. It inherits all the features of `Transition`, but contains\\n * additional features necessary to play nice with CSS transitions (hence the\\n * name of the component).\\n *\\n * ---\\n *\\n * By default the `Transition` component does not alter the behavior of the\\n * component it renders, it only tracks \\\"enter\\\" and \\\"exit\\\" states for the\\n * components. It's up to you to give meaning and effect to those states. For\\n * example we can add styles to a component when it enters or exits:\\n *\\n * ```jsx\\n * import { Transition } from 'react-transition-group';\\n *\\n * const duration = 300;\\n *\\n * const defaultStyle = {\\n *   transition: `opacity ${duration}ms ease-in-out`,\\n *   opacity: 0,\\n * }\\n *\\n * const transitionStyles = {\\n *   entering: { opacity: 1 },\\n *   entered:  { opacity: 1 },\\n *   exiting:  { opacity: 0 },\\n *   exited:  { opacity: 0 },\\n * };\\n *\\n * const Fade = ({ in: inProp }) => (\\n *   <Transition in={inProp} timeout={duration}>\\n *     {state => (\\n *       <div style={{\\n *         ...defaultStyle,\\n *         ...transitionStyles[state]\\n *       }}>\\n *         I'm a fade Transition!\\n *       </div>\\n *     )}\\n *   </Transition>\\n * );\\n * ```\\n *\\n * There are 4 main states a Transition can be in:\\n *  - `'entering'`\\n *  - `'entered'`\\n *  - `'exiting'`\\n *  - `'exited'`\\n *\\n * Transition state is toggled via the `in` prop. When `true` the component\\n * begins the \\\"Enter\\\" stage. During this stage, the component will shift from\\n * its current transition state, to `'entering'` for the duration of the\\n * transition and then to the `'entered'` stage once it's complete. Let's take\\n * the following example (we'll use the\\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\\n *\\n * ```jsx\\n * function App() {\\n *   const [inProp, setInProp] = useState(false);\\n *   return (\\n *     <div>\\n *       <Transition in={inProp} timeout={500}>\\n *         {state => (\\n *           // ...\\n *         )}\\n *       </Transition>\\n *       <button onClick={() => setInProp(true)}>\\n *         Click to Enter\\n *       </button>\\n *     </div>\\n *   );\\n * }\\n * ```\\n *\\n * When the button is clicked the component will shift to the `'entering'` state\\n * and stay there for 500ms (the value of `timeout`) before it finally switches\\n * to `'entered'`.\\n *\\n * When `in` is `false` the same thing happens except the state moves from\\n * `'exiting'` to `'exited'`.\\n */\\n\\nvar Transition_Transition =\\n/*#__PURE__*/\\nfunction (_React$Component) {\\n  _inheritsLoose(Transition, _React$Component);\\n\\n  function Transition(props, context) {\\n    var _this;\\n\\n    _this = _React$Component.call(this, props, context) || this;\\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\\n\\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\\n    var initialStatus;\\n    _this.appearStatus = null;\\n\\n    if (props.in) {\\n      if (appear) {\\n        initialStatus = EXITED;\\n        _this.appearStatus = ENTERING;\\n      } else {\\n        initialStatus = ENTERED;\\n      }\\n    } else {\\n      if (props.unmountOnExit || props.mountOnEnter) {\\n        initialStatus = UNMOUNTED;\\n      } else {\\n        initialStatus = EXITED;\\n      }\\n    }\\n\\n    _this.state = {\\n      status: initialStatus\\n    };\\n    _this.nextCallback = null;\\n    return _this;\\n  }\\n\\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\\n    var nextIn = _ref.in;\\n\\n    if (nextIn && prevState.status === UNMOUNTED) {\\n      return {\\n        status: EXITED\\n      };\\n    }\\n\\n    return null;\\n  }; // getSnapshotBeforeUpdate(prevProps) {\\n  //   let nextStatus = null\\n  //   if (prevProps !== this.props) {\\n  //     const { status } = this.state\\n  //     if (this.props.in) {\\n  //       if (status !== ENTERING && status !== ENTERED) {\\n  //         nextStatus = ENTERING\\n  //       }\\n  //     } else {\\n  //       if (status === ENTERING || status === ENTERED) {\\n  //         nextStatus = EXITING\\n  //       }\\n  //     }\\n  //   }\\n  //   return { nextStatus }\\n  // }\\n\\n\\n  var _proto = Transition.prototype;\\n\\n  _proto.componentDidMount = function componentDidMount() {\\n    this.updateStatus(true, this.appearStatus);\\n  };\\n\\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\\n    var nextStatus = null;\\n\\n    if (prevProps !== this.props) {\\n      var status = this.state.status;\\n\\n      if (this.props.in) {\\n        if (status !== ENTERING && status !== ENTERED) {\\n          nextStatus = ENTERING;\\n        }\\n      } else {\\n        if (status === ENTERING || status === ENTERED) {\\n          nextStatus = EXITING;\\n        }\\n      }\\n    }\\n\\n    this.updateStatus(false, nextStatus);\\n  };\\n\\n  _proto.componentWillUnmount = function componentWillUnmount() {\\n    this.cancelNextCallback();\\n  };\\n\\n  _proto.getTimeouts = function getTimeouts() {\\n    var timeout = this.props.timeout;\\n    var exit, enter, appear;\\n    exit = enter = appear = timeout;\\n\\n    if (timeout != null && typeof timeout !== 'number') {\\n      exit = timeout.exit;\\n      enter = timeout.enter; // TODO: remove fallback for next major\\n\\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\\n    }\\n\\n    return {\\n      exit: exit,\\n      enter: enter,\\n      appear: appear\\n    };\\n  };\\n\\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\\n    if (mounting === void 0) {\\n      mounting = false;\\n    }\\n\\n    if (nextStatus !== null) {\\n      // nextStatus will always be ENTERING or EXITING.\\n      this.cancelNextCallback();\\n      var node = external_commonjs_react_dom_commonjs2_react_dom_root_ReactDOM_default.a.findDOMNode(this);\\n\\n      if (nextStatus === ENTERING) {\\n        this.performEnter(node, mounting);\\n      } else {\\n        this.performExit(node);\\n      }\\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\\n      this.setState({\\n        status: UNMOUNTED\\n      });\\n    }\\n  };\\n\\n  _proto.performEnter = function performEnter(node, mounting) {\\n    var _this2 = this;\\n\\n    var enter = this.props.enter;\\n    var appearing = this.context ? this.context.isMounting : mounting;\\n    var timeouts = this.getTimeouts();\\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\\n    // if we are mounting and running this it means appear _must_ be set\\n\\n    if (!mounting && !enter || config.disabled) {\\n      this.safeSetState({\\n        status: ENTERED\\n      }, function () {\\n        _this2.props.onEntered(node);\\n      });\\n      return;\\n    }\\n\\n    this.props.onEnter(node, appearing);\\n    this.safeSetState({\\n      status: ENTERING\\n    }, function () {\\n      _this2.props.onEntering(node, appearing);\\n\\n      _this2.onTransitionEnd(node, enterTimeout, function () {\\n        _this2.safeSetState({\\n          status: ENTERED\\n        }, function () {\\n          _this2.props.onEntered(node, appearing);\\n        });\\n      });\\n    });\\n  };\\n\\n  _proto.performExit = function performExit(node) {\\n    var _this3 = this;\\n\\n    var exit = this.props.exit;\\n    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED\\n\\n    if (!exit || config.disabled) {\\n      this.safeSetState({\\n        status: EXITED\\n      }, function () {\\n        _this3.props.onExited(node);\\n      });\\n      return;\\n    }\\n\\n    this.props.onExit(node);\\n    this.safeSetState({\\n      status: EXITING\\n    }, function () {\\n      _this3.props.onExiting(node);\\n\\n      _this3.onTransitionEnd(node, timeouts.exit, function () {\\n        _this3.safeSetState({\\n          status: EXITED\\n        }, function () {\\n          _this3.props.onExited(node);\\n        });\\n      });\\n    });\\n  };\\n\\n  _proto.cancelNextCallback = function cancelNextCallback() {\\n    if (this.nextCallback !== null) {\\n      this.nextCallback.cancel();\\n      this.nextCallback = null;\\n    }\\n  };\\n\\n  _proto.safeSetState = function safeSetState(nextState, callback) {\\n    // This shouldn't be necessary, but there are weird race conditions with\\n    // setState callbacks and unmounting in testing, so always make sure that\\n    // we can cancel any pending setState callbacks after we unmount.\\n    callback = this.setNextCallback(callback);\\n    this.setState(nextState, callback);\\n  };\\n\\n  _proto.setNextCallback = function setNextCallback(callback) {\\n    var _this4 = this;\\n\\n    var active = true;\\n\\n    this.nextCallback = function (event) {\\n      if (active) {\\n        active = false;\\n        _this4.nextCallback = null;\\n        callback(event);\\n      }\\n    };\\n\\n    this.nextCallback.cancel = function () {\\n      active = false;\\n    };\\n\\n    return this.nextCallback;\\n  };\\n\\n  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {\\n    this.setNextCallback(handler);\\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\\n\\n    if (!node || doesNotHaveTimeoutOrListener) {\\n      setTimeout(this.nextCallback, 0);\\n      return;\\n    }\\n\\n    if (this.props.addEndListener) {\\n      this.props.addEndListener(node, this.nextCallback);\\n    }\\n\\n    if (timeout != null) {\\n      setTimeout(this.nextCallback, timeout);\\n    }\\n  };\\n\\n  _proto.render = function render() {\\n    var status = this.state.status;\\n\\n    if (status === UNMOUNTED) {\\n      return null;\\n    }\\n\\n    var _this$props = this.props,\\n        children = _this$props.children,\\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\\\"children\\\"]); // filter props for Transtition\\n\\n\\n    delete childProps.in;\\n    delete childProps.mountOnEnter;\\n    delete childProps.unmountOnExit;\\n    delete childProps.appear;\\n    delete childProps.enter;\\n    delete childProps.exit;\\n    delete childProps.timeout;\\n    delete childProps.addEndListener;\\n    delete childProps.onEnter;\\n    delete childProps.onEntering;\\n    delete childProps.onEntered;\\n    delete childProps.onExit;\\n    delete childProps.onExiting;\\n    delete childProps.onExited;\\n\\n    if (typeof children === 'function') {\\n      // allows for nested Transitions\\n      return external_root_React_commonjs_react_commonjs2_react_default.a.createElement(TransitionGroupContext.Provider, {\\n        value: null\\n      }, children(status, childProps));\\n    }\\n\\n    var child = external_root_React_commonjs_react_commonjs2_react_default.a.Children.only(children);\\n    return (// allows for nested Transitions\\n      external_root_React_commonjs_react_commonjs2_react_default.a.createElement(TransitionGroupContext.Provider, {\\n        value: null\\n      }, external_root_React_commonjs_react_commonjs2_react_default.a.cloneElement(child, childProps))\\n    );\\n  };\\n\\n  return Transition;\\n}(external_root_React_commonjs_react_commonjs2_react_default.a.Component);\\n\\nTransition_Transition.contextType = TransitionGroupContext;\\nTransition_Transition.propTypes =  false ? undefined : {};\\n\\nfunction noop() {}\\n\\nTransition_Transition.defaultProps = {\\n  in: false,\\n  mountOnEnter: false,\\n  unmountOnExit: false,\\n  appear: false,\\n  enter: true,\\n  exit: true,\\n  onEnter: noop,\\n  onEntering: noop,\\n  onEntered: noop,\\n  onExit: noop,\\n  onExiting: noop,\\n  onExited: noop\\n};\\nTransition_Transition.UNMOUNTED = 0;\\nTransition_Transition.EXITED = 1;\\nTransition_Transition.ENTERING = 2;\\nTransition_Transition.ENTERED = 3;\\nTransition_Transition.EXITING = 4;\\n/* harmony default export */ var esm_Transition = (Transition_Transition);\\n// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/CSSTransition.js\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nvar _addClass = function addClass(node, classes) {\\n  return node && classes && classes.split(' ').forEach(function (c) {\\n    return addClass_default()(node, c);\\n  });\\n};\\n\\nvar CSSTransition_removeClass = function removeClass(node, classes) {\\n  return node && classes && classes.split(' ').forEach(function (c) {\\n    return removeClass_default()(node, c);\\n  });\\n};\\n/**\\n * A transition component inspired by the excellent\\n * [ng-animate](http://www.nganimate.org/) library, you should use it if you're\\n * using CSS transitions or animations. It's built upon the\\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\\n * component, so it inherits all of its props.\\n *\\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\\n * and `exit` states of the transition. The first class is applied and then a\\n * second `*-active` class in order to activate the CSS transition. After the\\n * transition, matching `*-done` class names are applied to persist the\\n * transition state.\\n *\\n * ```jsx\\n * function App() {\\n *   const [inProp, setInProp] = useState(false);\\n *   return (\\n *     <div>\\n *       <CSSTransition in={inProp} timeout={200} classNames=\\\"my-node\\\">\\n *         <div>\\n *           {\\\"I'll receive my-node-* classes\\\"}\\n *         </div>\\n *       </CSSTransition>\\n *       <button type=\\\"button\\\" onClick={() => setInProp(true)}>\\n *         Click to Enter\\n *       </button>\\n *     </div>\\n *   );\\n * }\\n * ```\\n *\\n * When the `in` prop is set to `true`, the child component will first receive\\n * the class `example-enter`, then the `example-enter-active` will be added in\\n * the next tick. `CSSTransition` [forces a\\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\\n * between before adding the `example-enter-active`. This is an important trick\\n * because it allows us to transition between `example-enter` and\\n * `example-enter-active` even though they were added immediately one after\\n * another. Most notably, this is what makes it possible for us to animate\\n * _appearance_.\\n *\\n * ```css\\n * .my-node-enter {\\n *   opacity: 0;\\n * }\\n * .my-node-enter-active {\\n *   opacity: 1;\\n *   transition: opacity 200ms;\\n * }\\n * .my-node-exit {\\n *   opacity: 1;\\n * }\\n * .my-node-exit-active {\\n *   opacity: 0;\\n *   transition: opacity 200ms;\\n * }\\n * ```\\n *\\n * `*-active` classes represent which styles you want to animate **to**.\\n *\\n * **Note**: If you're using the\\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\\n * prop, make sure to define styles for `.appear-*` classes as well.\\n */\\n\\n\\nvar CSSTransition_CSSTransition =\\n/*#__PURE__*/\\nfunction (_React$Component) {\\n  _inheritsLoose(CSSTransition, _React$Component);\\n\\n  function CSSTransition() {\\n    var _this;\\n\\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n      args[_key] = arguments[_key];\\n    }\\n\\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\\n    _this.appliedClasses = {\\n      appear: {},\\n      enter: {},\\n      exit: {}\\n    };\\n\\n    _this.onEnter = function (node, appearing) {\\n      _this.removeClasses(node, 'exit');\\n\\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\\n\\n      if (_this.props.onEnter) {\\n        _this.props.onEnter(node, appearing);\\n      }\\n    };\\n\\n    _this.onEntering = function (node, appearing) {\\n      var type = appearing ? 'appear' : 'enter';\\n\\n      _this.addClass(node, type, 'active');\\n\\n      if (_this.props.onEntering) {\\n        _this.props.onEntering(node, appearing);\\n      }\\n    };\\n\\n    _this.onEntered = function (node, appearing) {\\n      var type = appearing ? 'appear' : 'enter';\\n\\n      _this.removeClasses(node, type);\\n\\n      _this.addClass(node, type, 'done');\\n\\n      if (_this.props.onEntered) {\\n        _this.props.onEntered(node, appearing);\\n      }\\n    };\\n\\n    _this.onExit = function (node) {\\n      _this.removeClasses(node, 'appear');\\n\\n      _this.removeClasses(node, 'enter');\\n\\n      _this.addClass(node, 'exit', 'base');\\n\\n      if (_this.props.onExit) {\\n        _this.props.onExit(node);\\n      }\\n    };\\n\\n    _this.onExiting = function (node) {\\n      _this.addClass(node, 'exit', 'active');\\n\\n      if (_this.props.onExiting) {\\n        _this.props.onExiting(node);\\n      }\\n    };\\n\\n    _this.onExited = function (node) {\\n      _this.removeClasses(node, 'exit');\\n\\n      _this.addClass(node, 'exit', 'done');\\n\\n      if (_this.props.onExited) {\\n        _this.props.onExited(node);\\n      }\\n    };\\n\\n    _this.getClassNames = function (type) {\\n      var classNames = _this.props.classNames;\\n      var isStringClassNames = typeof classNames === 'string';\\n      var prefix = isStringClassNames && classNames ? classNames + \\\"-\\\" : '';\\n      var baseClassName = isStringClassNames ? \\\"\\\" + prefix + type : classNames[type];\\n      var activeClassName = isStringClassNames ? baseClassName + \\\"-active\\\" : classNames[type + \\\"Active\\\"];\\n      var doneClassName = isStringClassNames ? baseClassName + \\\"-done\\\" : classNames[type + \\\"Done\\\"];\\n      return {\\n        baseClassName: baseClassName,\\n        activeClassName: activeClassName,\\n        doneClassName: doneClassName\\n      };\\n    };\\n\\n    return _this;\\n  }\\n\\n  var _proto = CSSTransition.prototype;\\n\\n  _proto.addClass = function addClass(node, type, phase) {\\n    var className = this.getClassNames(type)[phase + \\\"ClassName\\\"];\\n\\n    if (type === 'appear' && phase === 'done') {\\n      className += \\\" \\\" + this.getClassNames('enter').doneClassName;\\n    } // This is for to force a repaint,\\n    // which is necessary in order to transition styles when adding a class name.\\n\\n\\n    if (phase === 'active') {\\n      /* eslint-disable no-unused-expressions */\\n      node && node.scrollTop;\\n    }\\n\\n    this.appliedClasses[type][phase] = className;\\n\\n    _addClass(node, className);\\n  };\\n\\n  _proto.removeClasses = function removeClasses(node, type) {\\n    var _this$appliedClasses$ = this.appliedClasses[type],\\n        baseClassName = _this$appliedClasses$.base,\\n        activeClassName = _this$appliedClasses$.active,\\n        doneClassName = _this$appliedClasses$.done;\\n    this.appliedClasses[type] = {};\\n\\n    if (baseClassName) {\\n      CSSTransition_removeClass(node, baseClassName);\\n    }\\n\\n    if (activeClassName) {\\n      CSSTransition_removeClass(node, activeClassName);\\n    }\\n\\n    if (doneClassName) {\\n      CSSTransition_removeClass(node, doneClassName);\\n    }\\n  };\\n\\n  _proto.render = function render() {\\n    var _this$props = this.props,\\n        _ = _this$props.classNames,\\n        props = _objectWithoutPropertiesLoose(_this$props, [\\\"classNames\\\"]);\\n\\n    return external_root_React_commonjs_react_commonjs2_react_default.a.createElement(esm_Transition, _extends({}, props, {\\n      onEnter: this.onEnter,\\n      onEntered: this.onEntered,\\n      onEntering: this.onEntering,\\n      onExit: this.onExit,\\n      onExiting: this.onExiting,\\n      onExited: this.onExited\\n    }));\\n  };\\n\\n  return CSSTransition;\\n}(external_root_React_commonjs_react_commonjs2_react_default.a.Component);\\n\\nCSSTransition_CSSTransition.defaultProps = {\\n  classNames: ''\\n};\\nCSSTransition_CSSTransition.propTypes =  false ? undefined : {};\\n/* harmony default export */ var esm_CSSTransition = __webpack_exports__[\\\"a\\\"] = (CSSTransition_CSSTransition);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///48\\n\")},52:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n\\n// EXTERNAL MODULE: ./node_modules/classnames/index.js\\nvar classnames = __webpack_require__(2);\\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\\n\\n// EXTERNAL MODULE: external {\"root\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\"}\\nvar external_root_React_commonjs_react_commonjs2_react_ = __webpack_require__(0);\\nvar external_root_React_commonjs_react_commonjs2_react_default = /*#__PURE__*/__webpack_require__.n(external_root_React_commonjs_react_commonjs2_react_);\\n\\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\\nvar prop_types = __webpack_require__(1);\\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\\n\\n// EXTERNAL MODULE: ./node_modules/react-transition-group/esm/CSSTransition.js + 6 modules\\nvar CSSTransition = __webpack_require__(48);\\n\\n// EXTERNAL MODULE: ./src/components/button/button.jsx\\nvar button_button = __webpack_require__(7);\\n\\n// CONCATENATED MODULE: ./src/components/dialog/dialog.jsx\\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\\n\\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\\n\\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\\n\\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\\n\\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn\\'t been initialised - super() hasn\\'t been called\"); } return self; }\\n\\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\\n\\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\\n\\n\\n\\n\\n\\n\\n\\nvar dialog_Dialog =\\n/*#__PURE__*/\\nfunction (_React$Component) {\\n  _inherits(Dialog, _React$Component);\\n\\n  function Dialog() {\\n    var _getPrototypeOf2;\\n\\n    var _this;\\n\\n    _classCallCheck(this, Dialog);\\n\\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n      args[_key] = arguments[_key];\\n    }\\n\\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\\n\\n    _this.handleCancel = function () {\\n      if (_this.props.is_closed_on_cancel) {\\n        _this.props.enableApp();\\n      }\\n\\n      _this.props.onCancel();\\n    };\\n\\n    _this.handleConfirm = function () {\\n      if (_this.props.is_closed_on_confirm) {\\n        _this.props.enableApp();\\n      }\\n\\n      _this.props.onConfirm();\\n    };\\n\\n    return _this;\\n  }\\n\\n  _createClass(Dialog, [{\\n    key: \"componentDidMount\",\\n    value: function componentDidMount() {\\n      if (this.props.is_visible) {\\n        this.props.disableApp();\\n      }\\n    }\\n  }, {\\n    key: \"componentDidUpdate\",\\n    value: function componentDidUpdate() {\\n      if (this.props.is_visible) {\\n        this.props.disableApp();\\n      }\\n    }\\n  }, {\\n    key: \"render\",\\n    value: function render() {\\n      var _this$props = this.props,\\n          cancel_button_text = _this$props.cancel_button_text,\\n          children = _this$props.children,\\n          confirm_button_text = _this$props.confirm_button_text,\\n          onCancel = _this$props.onCancel,\\n          is_loading = _this$props.is_loading,\\n          is_visible = _this$props.is_visible,\\n          title = _this$props.title;\\n      return external_root_React_commonjs_react_commonjs2_react_default.a.createElement(external_root_React_commonjs_react_commonjs2_react_default.a.Fragment, null, external_root_React_commonjs_react_commonjs2_react_default.a.createElement(CSSTransition[\"a\" /* default */], {\\n        appear: true,\\n        \"in\": is_visible && !is_loading,\\n        timeout: 50,\\n        classNames: {\\n          appear: \\'dc-dialog__wrapper--enter\\',\\n          enter: \\'dc-dialog__wrapper--enter\\',\\n          enterDone: \\'dc-dialog__wrapper--enter-done\\',\\n          exit: \\'dc-dialog__wrapper--exit\\'\\n        },\\n        unmountOnExit: true\\n      }, external_root_React_commonjs_react_commonjs2_react_default.a.createElement(\"div\", {\\n        className: \"dc-dialog__wrapper\"\\n      }, external_root_React_commonjs_react_commonjs2_react_default.a.createElement(\"div\", {\\n        className: \"dc-dialog__dialog\"\\n      }, title && external_root_React_commonjs_react_commonjs2_react_default.a.createElement(\"h1\", {\\n        className: \"dc-dialog__header\"\\n      }, title), typeof children === \\'string\\' ? external_root_React_commonjs_react_commonjs2_react_default.a.createElement(\"p\", {\\n        className: \"dc-dialog__content\"\\n      }, children) : external_root_React_commonjs_react_commonjs2_react_default.a.createElement(\"div\", {\\n        className: \"dc-dialog__content\"\\n      }, children), external_root_React_commonjs_react_commonjs2_react_default.a.createElement(\"div\", {\\n        className: \"dc-dialog__footer\"\\n      }, onCancel && external_root_React_commonjs_react_commonjs2_react_default.a.createElement(button_button[\"a\" /* default */], {\\n        className: classnames_default()(\\'dc-dialog__button\\', \\'btn--secondary\\', \\'btn--secondary--orange\\'),\\n        has_effect: true,\\n        text: cancel_button_text,\\n        onClick: this.handleCancel\\n      }), confirm_button_text && external_root_React_commonjs_react_commonjs2_react_default.a.createElement(button_button[\"a\" /* default */], {\\n        className: classnames_default()(\\'dc-dialog__button\\', \\'btn--primary\\', \\'btn--primary--orange\\'),\\n        has_effect: true,\\n        text: confirm_button_text,\\n        onClick: this.handleConfirm\\n      }))))));\\n    }\\n  }]);\\n\\n  return Dialog;\\n}(external_root_React_commonjs_react_commonjs2_react_default.a.Component);\\n\\ndialog_Dialog.defaultProps = {\\n  is_closed_on_cancel: true,\\n  is_closed_on_confirm: true\\n};\\ndialog_Dialog.propTypes = {\\n  cancel_button_text: prop_types_default.a.string,\\n  confirm_button_text: prop_types_default.a.string,\\n  disableApp: prop_types_default.a.func,\\n  enableApp: prop_types_default.a.func,\\n  is_closed_on_cancel: prop_types_default.a.bool,\\n  is_closed_on_confirm: prop_types_default.a.bool,\\n  is_loading: prop_types_default.a.bool,\\n  is_visible: prop_types_default.a.bool,\\n  onCancel: prop_types_default.a.func,\\n  onConfirm: prop_types_default.a.func,\\n  title: prop_types_default.a.string\\n};\\n/* harmony default export */ var dialog = (dialog_Dialog);\\n// EXTERNAL MODULE: ./src/components/dialog/dialog.scss\\nvar dialog_dialog = __webpack_require__(42);\\n\\n// CONCATENATED MODULE: ./src/components/dialog/index.js\\n\\n\\n/* harmony default export */ var components_dialog = __webpack_exports__[\"default\"] = (dialog);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXJpdi1jb21wb25lbnQuW25hbWVdLy4vc3JjL2NvbXBvbmVudHMvZGlhbG9nL2RpYWxvZy5qc3g/ZDkxZCIsIndlYnBhY2s6Ly9kZXJpdi1jb21wb25lbnQuW25hbWVdLy4vc3JjL2NvbXBvbmVudHMvZGlhbG9nL2luZGV4LmpzPzU4YjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsYXNzTmFtZXMgICAgICAgIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFJlYWN0ICAgICAgICAgICAgIGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgICAgICAgICBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IENTU1RyYW5zaXRpb24gfSBmcm9tICdyZWFjdC10cmFuc2l0aW9uLWdyb3VwJztcbmltcG9ydCBCdXR0b24gICAgICAgICAgICBmcm9tICcuLi9idXR0b24vYnV0dG9uLmpzeCc7XG5cbmNsYXNzIERpYWxvZyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLmlzX3Zpc2libGUpIHtcbiAgICAgICAgICAgIHRoaXMucHJvcHMuZGlzYWJsZUFwcCgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29tcG9uZW50RGlkVXBkYXRlKCkge1xuICAgICAgICBpZiAodGhpcy5wcm9wcy5pc192aXNpYmxlKSB7XG4gICAgICAgICAgICB0aGlzLnByb3BzLmRpc2FibGVBcHAoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGhhbmRsZUNhbmNlbCA9ICgpID0+IHtcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuaXNfY2xvc2VkX29uX2NhbmNlbCkge1xuICAgICAgICAgICAgdGhpcy5wcm9wcy5lbmFibGVBcHAoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnByb3BzLm9uQ2FuY2VsKCk7XG4gICAgfTtcblxuICAgIGhhbmRsZUNvbmZpcm0gPSAoKSA9PiB7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLmlzX2Nsb3NlZF9vbl9jb25maXJtKSB7XG4gICAgICAgICAgICB0aGlzLnByb3BzLmVuYWJsZUFwcCgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucHJvcHMub25Db25maXJtKCk7XG4gICAgfTtcblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgY2FuY2VsX2J1dHRvbl90ZXh0LFxuICAgICAgICAgICAgY2hpbGRyZW4sXG4gICAgICAgICAgICBjb25maXJtX2J1dHRvbl90ZXh0LFxuICAgICAgICAgICAgb25DYW5jZWwsXG4gICAgICAgICAgICBpc19sb2FkaW5nLFxuICAgICAgICAgICAgaXNfdmlzaWJsZSxcbiAgICAgICAgICAgIHRpdGxlLFxuICAgICAgICB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgICAgICA8Q1NTVHJhbnNpdGlvblxuICAgICAgICAgICAgICAgICAgICBhcHBlYXJcbiAgICAgICAgICAgICAgICAgICAgaW49eyhpc192aXNpYmxlICYmICFpc19sb2FkaW5nKX1cbiAgICAgICAgICAgICAgICAgICAgdGltZW91dD17NTB9XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZXM9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgIGFwcGVhciAgIDogJ2RjLWRpYWxvZ19fd3JhcHBlci0tZW50ZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgZW50ZXIgICAgOiAnZGMtZGlhbG9nX193cmFwcGVyLS1lbnRlcicsXG4gICAgICAgICAgICAgICAgICAgICAgICBlbnRlckRvbmU6ICdkYy1kaWFsb2dfX3dyYXBwZXItLWVudGVyLWRvbmUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgZXhpdCAgICAgOiAnZGMtZGlhbG9nX193cmFwcGVyLS1leGl0JyxcbiAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgdW5tb3VudE9uRXhpdFxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2RjLWRpYWxvZ19fd3JhcHBlcic+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZGMtZGlhbG9nX19kaWFsb2cnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgdGl0bGUgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgxIGNsYXNzTmFtZT0nZGMtZGlhbG9nX19oZWFkZXInPnt0aXRsZX08L2gxPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHR5cGVvZiBjaGlsZHJlbiA9PT0gJ3N0cmluZycgP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9J2RjLWRpYWxvZ19fY29udGVudCc+e2NoaWxkcmVufTwvcD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZGMtZGlhbG9nX19jb250ZW50Jz57Y2hpbGRyZW59PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdkYy1kaWFsb2dfX2Zvb3Rlcic+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgb25DYW5jZWwgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkYy1kaWFsb2dfX2J1dHRvbicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdidG4tLXNlY29uZGFyeScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdidG4tLXNlY29uZGFyeS0tb3JhbmdlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhc19lZmZlY3RcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0PXtjYW5jZWxfYnV0dG9uX3RleHR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17dGhpcy5oYW5kbGVDYW5jZWx9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgY29uZmlybV9idXR0b25fdGV4dCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RjLWRpYWxvZ19fYnV0dG9uJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2J0bi0tcHJpbWFyeScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdidG4tLXByaW1hcnktLW9yYW5nZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYXNfZWZmZWN0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dD17Y29uZmlybV9idXR0b25fdGV4dH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLmhhbmRsZUNvbmZpcm19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9DU1NUcmFuc2l0aW9uPlxuICAgICAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cbkRpYWxvZy5kZWZhdWx0UHJvcHMgPSB7XG4gICAgaXNfY2xvc2VkX29uX2NhbmNlbCA6IHRydWUsXG4gICAgaXNfY2xvc2VkX29uX2NvbmZpcm06IHRydWUsXG59O1xuXG5EaWFsb2cucHJvcFR5cGVzID0ge1xuICAgIGNhbmNlbF9idXR0b25fdGV4dCAgOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNvbmZpcm1fYnV0dG9uX3RleHQgOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGRpc2FibGVBcHAgICAgICAgICAgOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBlbmFibGVBcHAgICAgICAgICAgIDogUHJvcFR5cGVzLmZ1bmMsXG4gICAgaXNfY2xvc2VkX29uX2NhbmNlbCA6IFByb3BUeXBlcy5ib29sLFxuICAgIGlzX2Nsb3NlZF9vbl9jb25maXJtOiBQcm9wVHlwZXMuYm9vbCxcbiAgICBpc19sb2FkaW5nICAgICAgICAgIDogUHJvcFR5cGVzLmJvb2wsXG4gICAgaXNfdmlzaWJsZSAgICAgICAgICA6IFByb3BUeXBlcy5ib29sLFxuICAgIG9uQ2FuY2VsICAgICAgICAgICAgOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBvbkNvbmZpcm0gICAgICAgICAgIDogUHJvcFR5cGVzLmZ1bmMsXG4gICAgdGl0bGUgICAgICAgICAgICAgICA6IFByb3BUeXBlcy5zdHJpbmcsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBEaWFsb2c7XG4iLCJpbXBvcnQgRGlhbG9nIGZyb20gJy4vZGlhbG9nLmpzeCc7XG5pbXBvcnQgICAgICAgICAgICAgJy4vZGlhbG9nLnNjc3MnO1xuXG5leHBvcnQgZGVmYXVsdCBEaWFsb2c7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFhQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTs7Ozs7O0FBekJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQWdCQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFVQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQTtBQU1BO0FBVkE7QUFZQTtBQUFBO0FBQ0E7QUFBQTtBQUVBO0FBQUE7QUFHQTtBQUFBO0FBRUE7QUFBQTtBQUVBO0FBQUE7QUFHQTtBQUtBO0FBQ0E7QUFDQTtBQVJBO0FBYUE7QUFLQTtBQUNBO0FBQ0E7QUFSQTtBQWlCQTs7OztBQTVGQTtBQUNBO0FBOEZBO0FBQ0E7QUFDQTtBQUZBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBWEE7QUFjQTs7Ozs7QUN4SEE7QUFDQTtBQUVBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///52\\n')},6:function(module,exports){eval(\"module.exports = __WEBPACK_EXTERNAL_MODULE__6__;//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vZXh0ZXJuYWwge1wiY29tbW9uanNcIjpcInJlYWN0LWRvbVwiLFwiY29tbW9uanMyXCI6XCJyZWFjdC1kb21cIixcInJvb3RcIjpcIlJlYWN0RE9NXCJ9PzJjYTEiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFX182X187Il0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///6\\n\")},7:function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval(\"/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);\\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);\\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);\\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\\n\\n\\n\\n\\nvar Button = function Button(_ref) {\\n  var children = _ref.children,\\n      _ref$className = _ref.className,\\n      className = _ref$className === void 0 ? '' : _ref$className,\\n      classNameSpan = _ref.classNameSpan,\\n      has_effect = _ref.has_effect,\\n      id = _ref.id,\\n      is_disabled = _ref.is_disabled,\\n      onClick = _ref.onClick,\\n      tabIndex = _ref.tabIndex,\\n      text = _ref.text,\\n      wrapperClassName = _ref.wrapperClassName,\\n      type = _ref.type;\\n  var classes = classnames__WEBPACK_IMPORTED_MODULE_0___default()('btn', {\\n    effect: has_effect\\n  }, className);\\n  var button = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\\\"button\\\", {\\n    id: id,\\n    className: classes,\\n    onClick: onClick || undefined,\\n    disabled: is_disabled,\\n    tabIndex: tabIndex || '0',\\n    type: type || 'submit'\\n  }, text && react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\\\"span\\\", {\\n    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('btn__text', classNameSpan)\\n  }, text), children);\\n  var wrapper = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(\\\"div\\\", {\\n    className: wrapperClassName\\n  }, button);\\n  return wrapperClassName ? wrapper : button;\\n};\\n\\nButton.propTypes = {\\n  children: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.node,\\n  className: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\\n  classNameSpan: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\\n  has_effect: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,\\n  id: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\\n  is_disabled: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool]),\\n  onClick: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,\\n  text: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,\\n  wrapperClassName: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string\\n};\\n/* harmony default export */ __webpack_exports__[\\\"a\\\"] = (Button);//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vLi9zcmMvY29tcG9uZW50cy9idXR0b24vYnV0dG9uLmpzeD82OTAyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFByb3BUeXBlcyAgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgICAgICBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IEJ1dHRvbiA9ICh7XG4gICAgY2hpbGRyZW4sXG4gICAgY2xhc3NOYW1lID0gJycsXG4gICAgY2xhc3NOYW1lU3BhbixcbiAgICBoYXNfZWZmZWN0LFxuICAgIGlkLFxuICAgIGlzX2Rpc2FibGVkLFxuICAgIG9uQ2xpY2ssXG4gICAgdGFiSW5kZXgsXG4gICAgdGV4dCxcbiAgICB3cmFwcGVyQ2xhc3NOYW1lLFxuICAgIHR5cGUsXG59KSA9PiB7XG4gICAgY29uc3QgY2xhc3NlcyA9IGNsYXNzTmFtZXMoJ2J0bicsIHsgZWZmZWN0OiBoYXNfZWZmZWN0IH0sIGNsYXNzTmFtZSk7XG4gICAgY29uc3QgYnV0dG9uID0gKFxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICBpZD17aWR9XG4gICAgICAgICAgICBjbGFzc05hbWU9e2NsYXNzZXN9XG4gICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrIHx8IHVuZGVmaW5lZH1cbiAgICAgICAgICAgIGRpc2FibGVkPXtpc19kaXNhYmxlZH1cbiAgICAgICAgICAgIHRhYkluZGV4PXt0YWJJbmRleCB8fCAnMCd9XG4gICAgICAgICAgICB0eXBlPXt0eXBlIHx8ICdzdWJtaXQnfVxuICAgICAgICA+XG4gICAgICAgICAgICB7IHRleHQgJiZcbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ2J0bl9fdGV4dCcsIGNsYXNzTmFtZVNwYW4pfT5cbiAgICAgICAgICAgICAgICAgICAge3RleHR9XG4gICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICA8L2J1dHRvbj5cbiAgICApO1xuICAgIGNvbnN0IHdyYXBwZXIgPSAoPGRpdiBjbGFzc05hbWU9e3dyYXBwZXJDbGFzc05hbWV9PntidXR0b259PC9kaXY+KTtcblxuICAgIHJldHVybiB3cmFwcGVyQ2xhc3NOYW1lID8gd3JhcHBlciA6IGJ1dHRvbjtcbn07XG5cbkJ1dHRvbi5wcm9wVHlwZXMgPSB7XG4gICAgY2hpbGRyZW4gICAgICAgIDogUHJvcFR5cGVzLm5vZGUsXG4gICAgY2xhc3NOYW1lICAgICAgIDogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBjbGFzc05hbWVTcGFuICAgOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGhhc19lZmZlY3QgICAgICA6IFByb3BUeXBlcy5ib29sLFxuICAgIGlkICAgICAgICAgICAgICA6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgaXNfZGlzYWJsZWQgICAgIDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm51bWJlciwgUHJvcFR5cGVzLmJvb2xdKSxcbiAgICBvbkNsaWNrICAgICAgICAgOiBQcm9wVHlwZXMuZnVuYyxcbiAgICB0ZXh0ICAgICAgICAgICAgOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHdyYXBwZXJDbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBCdXR0b247XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFZQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU5BO0FBU0E7QUFBQTtBQU9BO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBVEE7QUFZQSIsInNvdXJjZVJvb3QiOiIifQ==\\n//# sourceURL=webpack-internal:///7\\n\")},9:function(module,exports,__webpack_require__){\"use strict\";eval(\"\\n\\nvar _interopRequireDefault = __webpack_require__(33);\\n\\nexports.__esModule = true;\\nexports.default = addClass;\\n\\nvar _hasClass = _interopRequireDefault(__webpack_require__(34));\\n\\nfunction addClass(element, className) {\\n  if (element.classList) element.classList.add(className);else if (!(0, _hasClass.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);\\n}\\n\\nmodule.exports = exports[\\\"default\\\"];//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rlcml2LWNvbXBvbmVudC5bbmFtZV0vLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvY2xhc3MvYWRkQ2xhc3MuanM/YzljMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlZmF1bHQgPSBhZGRDbGFzcztcblxudmFyIF9oYXNDbGFzcyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vaGFzQ2xhc3NcIikpO1xuXG5mdW5jdGlvbiBhZGRDbGFzcyhlbGVtZW50LCBjbGFzc05hbWUpIHtcbiAgaWYgKGVsZW1lbnQuY2xhc3NMaXN0KSBlbGVtZW50LmNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lKTtlbHNlIGlmICghKDAsIF9oYXNDbGFzcy5kZWZhdWx0KShlbGVtZW50LCBjbGFzc05hbWUpKSBpZiAodHlwZW9mIGVsZW1lbnQuY2xhc3NOYW1lID09PSAnc3RyaW5nJykgZWxlbWVudC5jbGFzc05hbWUgPSBlbGVtZW50LmNsYXNzTmFtZSArICcgJyArIGNsYXNzTmFtZTtlbHNlIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdjbGFzcycsIChlbGVtZW50LmNsYXNzTmFtZSAmJiBlbGVtZW50LmNsYXNzTmFtZS5iYXNlVmFsIHx8ICcnKSArICcgJyArIGNsYXNzTmFtZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1tcImRlZmF1bHRcIl07Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///9\\n\")}}).default});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../components/lib/dialog.js\n");

/***/ }),

/***/ "./App/Components/Elements/Modals/DenialOfServiceModal/denial-of-service.jsx":
/*!***********************************************************************************!*\
  !*** ./App/Components/Elements/Modals/DenialOfServiceModal/denial-of-service.jsx ***!
  \***********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var deriv_components_lib_dialog__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! deriv-components/lib/dialog */ \"../../components/lib/dialog.js\");\n/* harmony import */ var deriv_components_lib_dialog__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(deriv_components_lib_dialog__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var deriv_components_lib_dialog_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! deriv-components/lib/dialog.css */ \"../../components/lib/dialog.css\");\n/* harmony import */ var deriv_components_lib_dialog_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(deriv_components_lib_dialog_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ \"../node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var App_i18n__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! App/i18n */ \"./App/i18n.js\");\n/* harmony import */ var App_Components_Elements_localize_jsx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! App/Components/Elements/localize.jsx */ \"./App/Components/Elements/localize.jsx\");\n/* harmony import */ var Stores_connect__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! Stores/connect */ \"./Stores/connect.js\");\n\n\n\n        \n\n\n\n\n\n\nvar DenialOfServiceModal = function DenialOfServiceModal(_ref) {\n  var disableApp = _ref.disableApp,\n      enableApp = _ref.enableApp,\n      is_loading = _ref.is_loading,\n      is_visible = _ref.is_visible,\n      onCancel = _ref.onCancel,\n      onConfirm = _ref.onConfirm;\n  return react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(deriv_components_lib_dialog__WEBPACK_IMPORTED_MODULE_0___default.a, {\n    title: Object(App_i18n__WEBPACK_IMPORTED_MODULE_4__[\"localize\"])('Whoops!'),\n    confirm_button_text: Object(App_i18n__WEBPACK_IMPORTED_MODULE_4__[\"localize\"])('Continue with Virtual Account'),\n    cancel_button_text: Object(App_i18n__WEBPACK_IMPORTED_MODULE_4__[\"localize\"])('Back to main website'),\n    onConfirm: onConfirm,\n    onCancel: onCancel,\n    disableApp: disableApp,\n    enableApp: enableApp,\n    is_loading: is_loading,\n    is_closed_on_cancel: false,\n    is_visible: is_visible\n  }, react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(App_Components_Elements_localize_jsx__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n    i18n_default_text: \"You cannot use your real money account with Deriv at this time.\"\n  }));\n};\n\nDenialOfServiceModal.propTypes = {\n  disableApp: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,\n  enableApp: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,\n  is_loading: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,\n  is_visible: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,\n  onCancel: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,\n  onConfirm: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(Stores_connect__WEBPACK_IMPORTED_MODULE_6__[\"connect\"])(function (_ref2) {\n  var ui = _ref2.ui;\n  return {\n    disableApp: ui.disableApp,\n    enableApp: ui.enableApp,\n    is_loading: ui.is_loading\n  };\n})(DenialOfServiceModal));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29tcG9uZW50cy9FbGVtZW50cy9Nb2RhbHMvRGVuaWFsT2ZTZXJ2aWNlTW9kYWwvZGVuaWFsLW9mLXNlcnZpY2UuanN4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vQXBwL0NvbXBvbmVudHMvRWxlbWVudHMvTW9kYWxzL0RlbmlhbE9mU2VydmljZU1vZGFsL2RlbmlhbC1vZi1zZXJ2aWNlLmpzeD9lYzUyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpYWxvZyB9ICAgIGZyb20gJ2Rlcml2LWNvbXBvbmVudHMnO1xuaW1wb3J0IFByb3BUeXBlcyAgICAgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgICAgICAgICBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBsb2NhbGl6ZSB9ICBmcm9tICdBcHAvaTE4bic7XG5pbXBvcnQgTG9jYWxpemUgICAgICBmcm9tICdBcHAvQ29tcG9uZW50cy9FbGVtZW50cy9sb2NhbGl6ZS5qc3gnO1xuaW1wb3J0IHsgY29ubmVjdCB9ICAgZnJvbSAnU3RvcmVzL2Nvbm5lY3QnO1xuXG5jb25zdCBEZW5pYWxPZlNlcnZpY2VNb2RhbCA9ICh7IFxuICAgIGRpc2FibGVBcHAsXG4gICAgZW5hYmxlQXBwLFxuICAgIGlzX2xvYWRpbmcsXG4gICAgaXNfdmlzaWJsZSxcbiAgICBvbkNhbmNlbCxcbiAgICBvbkNvbmZpcm0sXG59KSA9PiAoXG4gICAgPERpYWxvZ1xuICAgICAgICB0aXRsZT17bG9jYWxpemUoJ1dob29wcyEnKX1cbiAgICAgICAgY29uZmlybV9idXR0b25fdGV4dD17bG9jYWxpemUoJ0NvbnRpbnVlIHdpdGggVmlydHVhbCBBY2NvdW50Jyl9XG4gICAgICAgIGNhbmNlbF9idXR0b25fdGV4dD17bG9jYWxpemUoJ0JhY2sgdG8gbWFpbiB3ZWJzaXRlJyl9XG4gICAgICAgIG9uQ29uZmlybT17b25Db25maXJtfVxuICAgICAgICBvbkNhbmNlbD17b25DYW5jZWx9XG4gICAgICAgIGRpc2FibGVBcHA9e2Rpc2FibGVBcHB9XG4gICAgICAgIGVuYWJsZUFwcD17ZW5hYmxlQXBwfVxuICAgICAgICBpc19sb2FkaW5nPXtpc19sb2FkaW5nfVxuICAgICAgICBpc19jbG9zZWRfb25fY2FuY2VsPXtmYWxzZX1cbiAgICAgICAgaXNfdmlzaWJsZT17aXNfdmlzaWJsZX1cbiAgICA+XG4gICAgICAgIDxMb2NhbGl6ZSBpMThuX2RlZmF1bHRfdGV4dD0nWW91IGNhbm5vdCB1c2UgeW91ciByZWFsIG1vbmV5IGFjY291bnQgd2l0aCBEZXJpdiBhdCB0aGlzIHRpbWUuJyAvPlxuICAgIDwvRGlhbG9nPlxuKTtcblxuRGVuaWFsT2ZTZXJ2aWNlTW9kYWwucHJvcFR5cGVzID0ge1xuICAgIGRpc2FibGVBcHA6IFByb3BUeXBlcy5mdW5jLFxuICAgIGVuYWJsZUFwcCA6IFByb3BUeXBlcy5mdW5jLFxuICAgIGlzX2xvYWRpbmc6IFByb3BUeXBlcy5ib29sLFxuICAgIGlzX3Zpc2libGU6IFByb3BUeXBlcy5ib29sLFxuICAgIG9uQ2FuY2VsICA6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uQ29uZmlybSA6IFByb3BUeXBlcy5mdW5jLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChcbiAgICAoeyB1aSB9KSA9PiAoe1xuICAgICAgICBkaXNhYmxlQXBwOiB1aS5kaXNhYmxlQXBwLFxuICAgICAgICBlbmFibGVBcHAgOiB1aS5lbmFibGVBcHAsXG4gICAgICAgIGlzX2xvYWRpbmc6IHVpLmlzX2xvYWRpbmcsXG4gICAgfSksXG4pKERlbmlhbE9mU2VydmljZU1vZGFsKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFTQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVZBO0FBWUE7QUFBQTtBQXBCQTs7QUF3QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFOQTtBQVNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBQUE7OztBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./App/Components/Elements/Modals/DenialOfServiceModal/denial-of-service.jsx\n");

/***/ }),

/***/ "./App/Components/Elements/Modals/DenialOfServiceModal/index.js":
/*!**********************************************************************!*\
  !*** ./App/Components/Elements/Modals/DenialOfServiceModal/index.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _denial_of_service_jsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./denial-of-service.jsx */ \"./App/Components/Elements/Modals/DenialOfServiceModal/denial-of-service.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _denial_of_service_jsx__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29tcG9uZW50cy9FbGVtZW50cy9Nb2RhbHMvRGVuaWFsT2ZTZXJ2aWNlTW9kYWwvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9BcHAvQ29tcG9uZW50cy9FbGVtZW50cy9Nb2RhbHMvRGVuaWFsT2ZTZXJ2aWNlTW9kYWwvaW5kZXguanM/MjhlOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmcm9tICcuL2RlbmlhbC1vZi1zZXJ2aWNlLmpzeCc7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./App/Components/Elements/Modals/DenialOfServiceModal/index.js\n");

/***/ }),

/***/ "./App/Components/Elements/Modals/MarketUnavailableModal/index.js":
/*!************************************************************************!*\
  !*** ./App/Components/Elements/Modals/MarketUnavailableModal/index.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _market_unavailable_jsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./market-unavailable.jsx */ \"./App/Components/Elements/Modals/MarketUnavailableModal/market-unavailable.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _market_unavailable_jsx__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29tcG9uZW50cy9FbGVtZW50cy9Nb2RhbHMvTWFya2V0VW5hdmFpbGFibGVNb2RhbC9pbmRleC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL0FwcC9Db21wb25lbnRzL0VsZW1lbnRzL01vZGFscy9NYXJrZXRVbmF2YWlsYWJsZU1vZGFsL2luZGV4LmpzP2M5NjIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnJvbSAnLi9tYXJrZXQtdW5hdmFpbGFibGUuanN4JztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./App/Components/Elements/Modals/MarketUnavailableModal/index.js\n");

/***/ }),

/***/ "./App/Components/Elements/Modals/MarketUnavailableModal/market-unavailable.jsx":
/*!**************************************************************************************!*\
  !*** ./App/Components/Elements/Modals/MarketUnavailableModal/market-unavailable.jsx ***!
  \**************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var deriv_components_lib_dialog__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! deriv-components/lib/dialog */ \"../../components/lib/dialog.js\");\n/* harmony import */ var deriv_components_lib_dialog__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(deriv_components_lib_dialog__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var deriv_components_lib_dialog_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! deriv-components/lib/dialog.css */ \"../../components/lib/dialog.css\");\n/* harmony import */ var deriv_components_lib_dialog_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(deriv_components_lib_dialog_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ \"../node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var App_i18n__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! App/i18n */ \"./App/i18n.js\");\n/* harmony import */ var App_Components_Elements_localize_jsx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! App/Components/Elements/localize.jsx */ \"./App/Components/Elements/localize.jsx\");\n/* harmony import */ var Stores_connect__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! Stores/connect */ \"./Stores/connect.js\");\n\n\n\n        \n\n\n\n\n\n\nvar MarketUnavailableModal = function MarketUnavailableModal(_ref) {\n  var disableApp = _ref.disableApp,\n      enableApp = _ref.enableApp,\n      is_loading = _ref.is_loading,\n      is_visible = _ref.is_visible,\n      onCancel = _ref.onCancel,\n      onConfirm = _ref.onConfirm;\n  return react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(deriv_components_lib_dialog__WEBPACK_IMPORTED_MODULE_0___default.a, {\n    cancel_button_text: Object(App_i18n__WEBPACK_IMPORTED_MODULE_4__[\"localize\"])('Go to SmartTrader'),\n    confirm_button_text: Object(App_i18n__WEBPACK_IMPORTED_MODULE_4__[\"localize\"])('No, stay on Deriv'),\n    is_visible: is_visible,\n    onCancel: onCancel,\n    onConfirm: onConfirm,\n    disableApp: disableApp,\n    enableApp: enableApp,\n    is_loading: is_loading,\n    title: Object(App_i18n__WEBPACK_IMPORTED_MODULE_4__[\"localize\"])('Market is unavailable')\n  }, react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(App_Components_Elements_localize_jsx__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n    i18n_default_text: \"Sorry, but this market is not supported yet on Deriv. Do you want to trade this market on SmartTrader?\"\n  }));\n};\n\nMarketUnavailableModal.propTypes = {\n  disableApp: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,\n  enableApp: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,\n  is_loading: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,\n  is_visible: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,\n  onCancel: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,\n  onConfirm: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(Stores_connect__WEBPACK_IMPORTED_MODULE_6__[\"connect\"])(function (_ref2) {\n  var ui = _ref2.ui;\n  return {\n    disableApp: ui.disableApp,\n    enableApp: ui.enableApp,\n    is_loading: ui.is_loading\n  };\n})(MarketUnavailableModal));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29tcG9uZW50cy9FbGVtZW50cy9Nb2RhbHMvTWFya2V0VW5hdmFpbGFibGVNb2RhbC9tYXJrZXQtdW5hdmFpbGFibGUuanN4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vQXBwL0NvbXBvbmVudHMvRWxlbWVudHMvTW9kYWxzL01hcmtldFVuYXZhaWxhYmxlTW9kYWwvbWFya2V0LXVuYXZhaWxhYmxlLmpzeD9lZDQ4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpYWxvZyB9ICAgICBmcm9tICdkZXJpdi1jb21wb25lbnRzJztcbmltcG9ydCBQcm9wVHlwZXMgICAgICBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCAgICAgICAgICBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBsb2NhbGl6ZSB9ICAgZnJvbSAnQXBwL2kxOG4nO1xuaW1wb3J0IExvY2FsaXplICAgICAgIGZyb20gJ0FwcC9Db21wb25lbnRzL0VsZW1lbnRzL2xvY2FsaXplLmpzeCc7XG5pbXBvcnQgeyBjb25uZWN0IH0gICAgZnJvbSAnU3RvcmVzL2Nvbm5lY3QnO1xuXG5jb25zdCBNYXJrZXRVbmF2YWlsYWJsZU1vZGFsID0gKHtcbiAgICBkaXNhYmxlQXBwLFxuICAgIGVuYWJsZUFwcCxcbiAgICBpc19sb2FkaW5nLFxuICAgIGlzX3Zpc2libGUsXG4gICAgb25DYW5jZWwsXG4gICAgb25Db25maXJtXG59KSA9PiAoXG4gICAgPERpYWxvZ1xuICAgICAgICBjYW5jZWxfYnV0dG9uX3RleHQ9e2xvY2FsaXplKCdHbyB0byBTbWFydFRyYWRlcicpfVxuICAgICAgICBjb25maXJtX2J1dHRvbl90ZXh0PXtsb2NhbGl6ZSgnTm8sIHN0YXkgb24gRGVyaXYnKX1cbiAgICAgICAgaXNfdmlzaWJsZT17aXNfdmlzaWJsZX1cbiAgICAgICAgb25DYW5jZWw9e29uQ2FuY2VsfVxuICAgICAgICBvbkNvbmZpcm09e29uQ29uZmlybX1cbiAgICAgICAgZGlzYWJsZUFwcD17ZGlzYWJsZUFwcH1cbiAgICAgICAgZW5hYmxlQXBwPXtlbmFibGVBcHB9XG4gICAgICAgIGlzX2xvYWRpbmc9e2lzX2xvYWRpbmd9XG4gICAgICAgIHRpdGxlPXtsb2NhbGl6ZSgnTWFya2V0IGlzIHVuYXZhaWxhYmxlJyl9XG4gICAgPlxuICAgICAgICA8TG9jYWxpemUgaTE4bl9kZWZhdWx0X3RleHQ9J1NvcnJ5LCBidXQgdGhpcyBtYXJrZXQgaXMgbm90IHN1cHBvcnRlZCB5ZXQgb24gRGVyaXYuIERvIHlvdSB3YW50IHRvIHRyYWRlIHRoaXMgbWFya2V0IG9uIFNtYXJ0VHJhZGVyPycgLz5cbiAgICA8L0RpYWxvZz5cbik7XG5cbk1hcmtldFVuYXZhaWxhYmxlTW9kYWwucHJvcFR5cGVzID0ge1xuICAgIGRpc2FibGVBcHA6IFByb3BUeXBlcy5mdW5jLFxuICAgIGVuYWJsZUFwcCA6IFByb3BUeXBlcy5mdW5jLFxuICAgIGlzX2xvYWRpbmc6IFByb3BUeXBlcy5ib29sLFxuICAgIGlzX3Zpc2libGU6IFByb3BUeXBlcy5ib29sLFxuICAgIG9uQ2FuY2VsICA6IFByb3BUeXBlcy5mdW5jLFxuICAgIG9uQ29uZmlybSA6IFByb3BUeXBlcy5mdW5jLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChcbiAgICAoeyB1aSB9KSA9PiAoe1xuICAgICAgICBkaXNhYmxlQXBwOiB1aS5kaXNhYmxlQXBwLFxuICAgICAgICBlbmFibGVBcHAgOiB1aS5lbmFibGVBcHAsXG4gICAgICAgIGlzX2xvYWRpbmc6IHVpLmlzX2xvYWRpbmcsXG4gICAgfSksXG4pKE1hcmtldFVuYXZhaWxhYmxlTW9kYWwpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQVNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVRBO0FBV0E7QUFBQTtBQW5CQTs7QUF1QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFOQTtBQVNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBQUE7OztBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./App/Components/Elements/Modals/MarketUnavailableModal/market-unavailable.jsx\n");

/***/ }),

/***/ "./App/Components/Elements/Modals/ServicesErrorModal/constants.js":
/*!************************************************************************!*\
  !*** ./App/Components/Elements/Modals/ServicesErrorModal/constants.js ***!
  \************************************************************************/
/*! exports provided: title */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"title\", function() { return title; });\n/* harmony import */ var App_i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! App/i18n */ \"./App/i18n.js\");\n\nvar title = {\n  buy: Object(App_i18n__WEBPACK_IMPORTED_MODULE_0__[\"localize\"])('Purchase Error'),\n  sell: Object(App_i18n__WEBPACK_IMPORTED_MODULE_0__[\"localize\"])('Sell Error')\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29tcG9uZW50cy9FbGVtZW50cy9Nb2RhbHMvU2VydmljZXNFcnJvck1vZGFsL2NvbnN0YW50cy5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL0FwcC9Db21wb25lbnRzL0VsZW1lbnRzL01vZGFscy9TZXJ2aWNlc0Vycm9yTW9kYWwvY29uc3RhbnRzLmpzP2ZiNzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbG9jYWxpemUgfSAgZnJvbSAnQXBwL2kxOG4nO1xuXG5leHBvcnQgY29uc3QgdGl0bGUgPSB7XG4gICAgYnV5IDogbG9jYWxpemUoJ1B1cmNoYXNlIEVycm9yJyksXG4gICAgc2VsbDogbG9jYWxpemUoJ1NlbGwgRXJyb3InKSxcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBRkEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./App/Components/Elements/Modals/ServicesErrorModal/constants.js\n");

/***/ }),

/***/ "./App/Components/Elements/Modals/ServicesErrorModal/index.js":
/*!********************************************************************!*\
  !*** ./App/Components/Elements/Modals/ServicesErrorModal/index.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _services_error_modal_jsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./services-error-modal.jsx */ \"./App/Components/Elements/Modals/ServicesErrorModal/services-error-modal.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _services_error_modal_jsx__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29tcG9uZW50cy9FbGVtZW50cy9Nb2RhbHMvU2VydmljZXNFcnJvck1vZGFsL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vQXBwL0NvbXBvbmVudHMvRWxlbWVudHMvTW9kYWxzL1NlcnZpY2VzRXJyb3JNb2RhbC9pbmRleC5qcz9iZjkxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZyb20gJy4vc2VydmljZXMtZXJyb3ItbW9kYWwuanN4JztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./App/Components/Elements/Modals/ServicesErrorModal/index.js\n");

/***/ }),

/***/ "./App/Components/Elements/Modals/ServicesErrorModal/services-error-modal.jsx":
/*!************************************************************************************!*\
  !*** ./App/Components/Elements/Modals/ServicesErrorModal/services-error-modal.jsx ***!
  \************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var deriv_components_lib_dialog__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! deriv-components/lib/dialog */ \"../../components/lib/dialog.js\");\n/* harmony import */ var deriv_components_lib_dialog__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(deriv_components_lib_dialog__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var deriv_components_lib_dialog_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! deriv-components/lib/dialog.css */ \"../../components/lib/dialog.css\");\n/* harmony import */ var deriv_components_lib_dialog_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(deriv_components_lib_dialog_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ \"../node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var App_i18n__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! App/i18n */ \"./App/i18n.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constants */ \"./App/Components/Elements/Modals/ServicesErrorModal/constants.js\");\n/* harmony import */ var Stores_connect__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! Stores/connect */ \"./Stores/connect.js\");\n\n\n\n        \n\n\n\n\n\n\nvar ServicesErrorModal = function ServicesErrorModal(_ref) {\n  var disableApp = _ref.disableApp,\n      enableApp = _ref.enableApp,\n      is_loading = _ref.is_loading,\n      is_visible = _ref.is_visible,\n      onConfirm = _ref.onConfirm,\n      services_error = _ref.services_error;\n  var code = services_error.code,\n      message = services_error.message;\n  if (!code || !message) return null;\n  return react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(deriv_components_lib_dialog__WEBPACK_IMPORTED_MODULE_0___default.a, {\n    title: _constants__WEBPACK_IMPORTED_MODULE_5__[\"title\"][services_error.type],\n    confirm_button_text: Object(App_i18n__WEBPACK_IMPORTED_MODULE_4__[\"localize\"])('OK'),\n    onConfirm: onConfirm // TODO: handle onCancel\n    // cancel_button_text={cancel_button_text}\n    // onCancel={onCancel}\n    ,\n    disableApp: disableApp,\n    enableApp: enableApp,\n    is_loading: is_loading,\n    is_visible: is_visible\n  }, message);\n};\n\nServicesErrorModal.propTypes = {\n  disableApp: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,\n  enableApp: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,\n  is_loading: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,\n  is_visible: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,\n  onConfirm: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,\n  services_error: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.object\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(Stores_connect__WEBPACK_IMPORTED_MODULE_6__[\"connect\"])(function (_ref2) {\n  var ui = _ref2.ui;\n  return {\n    disableApp: ui.disableApp,\n    enableApp: ui.enableApp,\n    is_loading: ui.is_loading\n  };\n})(ServicesErrorModal));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29tcG9uZW50cy9FbGVtZW50cy9Nb2RhbHMvU2VydmljZXNFcnJvck1vZGFsL3NlcnZpY2VzLWVycm9yLW1vZGFsLmpzeC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL0FwcC9Db21wb25lbnRzL0VsZW1lbnRzL01vZGFscy9TZXJ2aWNlc0Vycm9yTW9kYWwvc2VydmljZXMtZXJyb3ItbW9kYWwuanN4P2JkNTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlhbG9nIH0gICAgZnJvbSAnZGVyaXYtY29tcG9uZW50cyc7XG5pbXBvcnQgUHJvcFR5cGVzICAgICBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCAgICAgICAgIGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGxvY2FsaXplIH0gIGZyb20gJ0FwcC9pMThuJztcbmltcG9ydCB7IHRpdGxlIH0gICAgIGZyb20gJy4vY29uc3RhbnRzJztcbmltcG9ydCB7IGNvbm5lY3QgfSAgIGZyb20gJ1N0b3Jlcy9jb25uZWN0JztcblxuY29uc3QgU2VydmljZXNFcnJvck1vZGFsID0gKHtcbiAgICBkaXNhYmxlQXBwLFxuICAgIGVuYWJsZUFwcCxcbiAgICBpc19sb2FkaW5nLFxuICAgIGlzX3Zpc2libGUsXG4gICAgb25Db25maXJtLFxuICAgIHNlcnZpY2VzX2Vycm9yXG59KSA9PiB7XG4gICAgY29uc3QgeyBjb2RlLCBtZXNzYWdlIH0gPSBzZXJ2aWNlc19lcnJvcjtcblxuICAgIGlmICghY29kZSB8fCAhbWVzc2FnZSkgcmV0dXJuIG51bGw7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8RGlhbG9nXG4gICAgICAgICAgICB0aXRsZT17dGl0bGVbc2VydmljZXNfZXJyb3IudHlwZV19XG4gICAgICAgICAgICBjb25maXJtX2J1dHRvbl90ZXh0PXtsb2NhbGl6ZSgnT0snKX1cbiAgICAgICAgICAgIG9uQ29uZmlybT17b25Db25maXJtfVxuICAgICAgICAgICAgLy8gVE9ETzogaGFuZGxlIG9uQ2FuY2VsXG4gICAgICAgICAgICAvLyBjYW5jZWxfYnV0dG9uX3RleHQ9e2NhbmNlbF9idXR0b25fdGV4dH1cbiAgICAgICAgICAgIC8vIG9uQ2FuY2VsPXtvbkNhbmNlbH1cbiAgICAgICAgICAgIGRpc2FibGVBcHA9e2Rpc2FibGVBcHB9XG4gICAgICAgICAgICBlbmFibGVBcHA9e2VuYWJsZUFwcH1cbiAgICAgICAgICAgIGlzX2xvYWRpbmc9e2lzX2xvYWRpbmd9XG4gICAgICAgICAgICBpc192aXNpYmxlPXtpc192aXNpYmxlfVxuICAgICAgICA+XG4gICAgICAgICAgICB7bWVzc2FnZX1cbiAgICAgICAgPC9EaWFsb2c+XG4gICAgKTtcbn07XG5cblNlcnZpY2VzRXJyb3JNb2RhbC5wcm9wVHlwZXMgPSB7XG4gICAgZGlzYWJsZUFwcCAgICA6IFByb3BUeXBlcy5mdW5jLFxuICAgIGVuYWJsZUFwcCAgICAgOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBpc19sb2FkaW5nICAgIDogUHJvcFR5cGVzLmJvb2wsXG4gICAgaXNfdmlzaWJsZSAgICA6IFByb3BUeXBlcy5ib29sLFxuICAgIG9uQ29uZmlybSAgICAgOiBQcm9wVHlwZXMuZnVuYyxcbiAgICBzZXJ2aWNlc19lcnJvcjogUHJvcFR5cGVzLm9iamVjdCxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoXG4gICAgKHsgdWkgfSkgPT4gKHtcbiAgICAgICAgZGlzYWJsZUFwcDogdWkuZGlzYWJsZUFwcCxcbiAgICAgICAgZW5hYmxlQXBwIDogdWkuZW5hYmxlQXBwLFxuICAgICAgICBpc19sb2FkaW5nOiB1aS5pc19sb2FkaW5nLFxuICAgIH0pLFxuKShTZXJ2aWNlc0Vycm9yTW9kYWwpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFPQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFOQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBVkE7QUFlQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU5BO0FBU0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFBQTs7O0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./App/Components/Elements/Modals/ServicesErrorModal/services-error-modal.jsx\n");

/***/ }),

/***/ "./App/Components/Elements/Modals/UnsupportedContractModal/index.js":
/*!**************************************************************************!*\
  !*** ./App/Components/Elements/Modals/UnsupportedContractModal/index.js ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _unsupported_contract_modal_jsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./unsupported-contract-modal.jsx */ \"./App/Components/Elements/Modals/UnsupportedContractModal/unsupported-contract-modal.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _unsupported_contract_modal_jsx__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29tcG9uZW50cy9FbGVtZW50cy9Nb2RhbHMvVW5zdXBwb3J0ZWRDb250cmFjdE1vZGFsL2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vQXBwL0NvbXBvbmVudHMvRWxlbWVudHMvTW9kYWxzL1Vuc3VwcG9ydGVkQ29udHJhY3RNb2RhbC9pbmRleC5qcz9iYWNkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZyb20gJy4vdW5zdXBwb3J0ZWQtY29udHJhY3QtbW9kYWwuanN4JztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./App/Components/Elements/Modals/UnsupportedContractModal/index.js\n");

/***/ }),

/***/ "./App/Components/Elements/Modals/UnsupportedContractModal/unsupported-contract-modal.jsx":
/*!************************************************************************************************!*\
  !*** ./App/Components/Elements/Modals/UnsupportedContractModal/unsupported-contract-modal.jsx ***!
  \************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var deriv_components_lib_dialog__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! deriv-components/lib/dialog */ \"../../components/lib/dialog.js\");\n/* harmony import */ var deriv_components_lib_dialog__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(deriv_components_lib_dialog__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var deriv_components_lib_dialog_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! deriv-components/lib/dialog.css */ \"../../components/lib/dialog.css\");\n/* harmony import */ var deriv_components_lib_dialog_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(deriv_components_lib_dialog_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ \"../node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var App_i18n__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! App/i18n */ \"./App/i18n.js\");\n/* harmony import */ var App_Components_Elements_localize_jsx__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! App/Components/Elements/localize.jsx */ \"./App/Components/Elements/localize.jsx\");\n/* harmony import */ var Stores_connect__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! Stores/connect */ \"./Stores/connect.js\");\n/* harmony import */ var _Constants_app_config__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../Constants/app-config */ \"./App/Constants/app-config.js\");\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n        \n\n\n\n\n\n\n\nvar UnsupportedContractModal =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(UnsupportedContractModal, _React$PureComponent);\n\n  function UnsupportedContractModal() {\n    _classCallCheck(this, UnsupportedContractModal);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UnsupportedContractModal).apply(this, arguments));\n  }\n\n  _createClass(UnsupportedContractModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          disableApp = _this$props.disableApp,\n          enableApp = _this$props.enableApp,\n          is_loading = _this$props.is_loading,\n          is_visible = _this$props.is_visible,\n          onConfirm = _this$props.onConfirm,\n          onClose = _this$props.onClose;\n      return react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(deriv_components_lib_dialog__WEBPACK_IMPORTED_MODULE_0___default.a, {\n        title: Object(App_i18n__WEBPACK_IMPORTED_MODULE_4__[\"localize\"])('Whoops!'),\n        confirm_button_text: Object(App_i18n__WEBPACK_IMPORTED_MODULE_4__[\"localize\"])('Continue to Binary.com'),\n        cancel_button_text: Object(App_i18n__WEBPACK_IMPORTED_MODULE_4__[\"localize\"])('Back to trade page'),\n        onConfirm: onConfirm,\n        onCancel: onClose,\n        disableApp: disableApp,\n        enableApp: enableApp,\n        is_loading: is_loading,\n        is_closed_on_cancel: true,\n        is_visible: is_visible\n      }, react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(App_Components_Elements_localize_jsx__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n        i18n_default_text: \"This trade type is currently not supported on {{website_name}}. Please go to Binary.com for details.\",\n        values: {\n          website_name: _Constants_app_config__WEBPACK_IMPORTED_MODULE_7__[\"website_name\"]\n        }\n      }));\n    }\n  }]);\n\n  return UnsupportedContractModal;\n}(react__WEBPACK_IMPORTED_MODULE_3___default.a.PureComponent);\n\nUnsupportedContractModal.propTypes = {\n  disableApp: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,\n  enableApp: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,\n  is_loading: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,\n  is_visible: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.bool,\n  onClose: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func,\n  onConfirm: prop_types__WEBPACK_IMPORTED_MODULE_2___default.a.func\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(Stores_connect__WEBPACK_IMPORTED_MODULE_6__[\"connect\"])(function (_ref) {\n  var ui = _ref.ui;\n  return {\n    disableApp: ui.disableApp,\n    enableApp: ui.enableApp,\n    is_loading: ui.is_loading\n  };\n})(UnsupportedContractModal));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29tcG9uZW50cy9FbGVtZW50cy9Nb2RhbHMvVW5zdXBwb3J0ZWRDb250cmFjdE1vZGFsL3Vuc3VwcG9ydGVkLWNvbnRyYWN0LW1vZGFsLmpzeC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL0FwcC9Db21wb25lbnRzL0VsZW1lbnRzL01vZGFscy9VbnN1cHBvcnRlZENvbnRyYWN0TW9kYWwvdW5zdXBwb3J0ZWQtY29udHJhY3QtbW9kYWwuanN4PzA5OTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlhbG9nIH0gICAgICAgZnJvbSAnZGVyaXYtY29tcG9uZW50cyc7XG5pbXBvcnQgUHJvcFR5cGVzICAgICAgICBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCAgICAgICAgICAgIGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGxvY2FsaXplIH0gICAgIGZyb20gJ0FwcC9pMThuJztcbmltcG9ydCBMb2NhbGl6ZSAgICAgICAgIGZyb20gJ0FwcC9Db21wb25lbnRzL0VsZW1lbnRzL2xvY2FsaXplLmpzeCc7XG5pbXBvcnQgeyBjb25uZWN0IH0gICAgICBmcm9tICdTdG9yZXMvY29ubmVjdCc7XG5pbXBvcnQgeyB3ZWJzaXRlX25hbWUgfSBmcm9tICcuLi8uLi8uLi8uLi9Db25zdGFudHMvYXBwLWNvbmZpZyc7XG5cbmNsYXNzIFVuc3VwcG9ydGVkQ29udHJhY3RNb2RhbCBleHRlbmRzIFJlYWN0LlB1cmVDb21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgeyBkaXNhYmxlQXBwLCBlbmFibGVBcHAsIGlzX2xvYWRpbmcsIGlzX3Zpc2libGUsIG9uQ29uZmlybSwgb25DbG9zZX0gPSB0aGlzLnByb3BzO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPERpYWxvZ1xuICAgICAgICAgICAgICAgIHRpdGxlPXtsb2NhbGl6ZSgnV2hvb3BzIScpfVxuICAgICAgICAgICAgICAgIGNvbmZpcm1fYnV0dG9uX3RleHQ9e2xvY2FsaXplKCdDb250aW51ZSB0byBCaW5hcnkuY29tJyl9XG4gICAgICAgICAgICAgICAgY2FuY2VsX2J1dHRvbl90ZXh0PXtsb2NhbGl6ZSgnQmFjayB0byB0cmFkZSBwYWdlJyl9XG4gICAgICAgICAgICAgICAgb25Db25maXJtPXtvbkNvbmZpcm19XG4gICAgICAgICAgICAgICAgb25DYW5jZWw9e29uQ2xvc2V9XG4gICAgICAgICAgICAgICAgZGlzYWJsZUFwcD17ZGlzYWJsZUFwcH1cbiAgICAgICAgICAgICAgICBlbmFibGVBcHA9e2VuYWJsZUFwcH1cbiAgICAgICAgICAgICAgICBpc19sb2FkaW5nPXtpc19sb2FkaW5nfVxuICAgICAgICAgICAgICAgIGlzX2Nsb3NlZF9vbl9jYW5jZWxcbiAgICAgICAgICAgICAgICBpc192aXNpYmxlPXtpc192aXNpYmxlfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxMb2NhbGl6ZVxuICAgICAgICAgICAgICAgICAgICBpMThuX2RlZmF1bHRfdGV4dD0nVGhpcyB0cmFkZSB0eXBlIGlzIGN1cnJlbnRseSBub3Qgc3VwcG9ydGVkIG9uIHt7d2Vic2l0ZV9uYW1lfX0uIFBsZWFzZSBnbyB0byBCaW5hcnkuY29tIGZvciBkZXRhaWxzLidcbiAgICAgICAgICAgICAgICAgICAgdmFsdWVzPXt7IHdlYnNpdGVfbmFtZSB9fVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L0RpYWxvZz5cbiAgICAgICAgKTtcbiAgICB9XG59XG5cblVuc3VwcG9ydGVkQ29udHJhY3RNb2RhbC5wcm9wVHlwZXMgPSB7XG4gICAgZGlzYWJsZUFwcDogUHJvcFR5cGVzLmZ1bmMsXG4gICAgZW5hYmxlQXBwIDogUHJvcFR5cGVzLmZ1bmMsXG4gICAgaXNfbG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gICAgaXNfdmlzaWJsZTogUHJvcFR5cGVzLmJvb2wsXG4gICAgb25DbG9zZSAgIDogUHJvcFR5cGVzLmZ1bmMsXG4gICAgb25Db25maXJtIDogUHJvcFR5cGVzLmZ1bmMsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFxuICAgICh7IHVpIH0pID0+ICh7XG4gICAgICAgIGRpc2FibGVBcHA6IHVpLmRpc2FibGVBcHAsXG4gICAgICAgIGVuYWJsZUFwcCA6IHVpLmVuYWJsZUFwcCxcbiAgICAgICAgaXNfbG9hZGluZzogdWkuaXNfbG9hZGluZyxcbiAgICB9KSxcbikoVW5zdXBwb3J0ZWRDb250cmFjdE1vZGFsKTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7O0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFWQTtBQWFBO0FBQ0E7QUFBQTtBQUFBO0FBRkE7QUFNQTs7OztBQXRCQTtBQUNBO0FBd0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTkE7QUFTQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQUFBOzs7QSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./App/Components/Elements/Modals/UnsupportedContractModal/unsupported-contract-modal.jsx\n");

/***/ }),

/***/ "./App/Containers/Modals/index.js":
/*!****************************************!*\
  !*** ./App/Containers/Modals/index.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modals_jsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modals.jsx */ \"./App/Containers/Modals/modals.jsx\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _modals_jsx__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29udGFpbmVycy9Nb2RhbHMvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9BcHAvQ29udGFpbmVycy9Nb2RhbHMvaW5kZXguanM/MTMxOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmcm9tICcuL21vZGFscy5qc3gnO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./App/Containers/Modals/index.js\n");

/***/ }),

/***/ "./App/Containers/Modals/modals.jsx":
/*!******************************************!*\
  !*** ./App/Containers/Modals/modals.jsx ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var Stores_connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! Stores/connect */ \"./Stores/connect.js\");\n/* harmony import */ var _common_url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! _common/url */ \"./_common/url.js\");\n/* harmony import */ var _common_url__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_common_url__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var Sass_app_modules_modals_scss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! Sass/app/modules/modals.scss */ \"./sass/app/modules/modals.scss\");\n/* harmony import */ var Sass_app_modules_modals_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(Sass_app_modules_modals_scss__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var App_Components_Elements_Modals_UnsupportedContractModal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! App/Components/Elements/Modals/UnsupportedContractModal */ \"./App/Components/Elements/Modals/UnsupportedContractModal/index.js\");\n/* harmony import */ var App_Components_Elements_Modals_MarketUnavailableModal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! App/Components/Elements/Modals/MarketUnavailableModal */ \"./App/Components/Elements/Modals/MarketUnavailableModal/index.js\");\n/* harmony import */ var App_Components_Elements_Modals_DenialOfServiceModal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! App/Components/Elements/Modals/DenialOfServiceModal */ \"./App/Components/Elements/Modals/DenialOfServiceModal/index.js\");\n/* harmony import */ var App_Components_Elements_Modals_ServicesErrorModal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! App/Components/Elements/Modals/ServicesErrorModal */ \"./App/Components/Elements/Modals/ServicesErrorModal/index.js\");\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\n\n\n\n\n\n\n\nvar AccountSignupModal = react__WEBPACK_IMPORTED_MODULE_0___default.a.lazy(function () {\n  return Promise.all(/*! import() | AccountSignupModal */[__webpack_require__.e(\"vendors~AccountSignupModal\"), __webpack_require__.e(\"AccountSignupModal\")]).then(__webpack_require__.bind(null, /*! ../AccountSignupModal */ \"./App/Containers/AccountSignupModal/index.js\"));\n});\n\nvar Modals = function Modals(_ref) {\n  var clearPurchaseInfo = _ref.clearPurchaseInfo,\n      is_denial_of_service_modal_visible = _ref.is_denial_of_service_modal_visible,\n      is_unsupported_contract_modal_visible = _ref.is_unsupported_contract_modal_visible,\n      is_market_unavailable_visible = _ref.is_market_unavailable_visible,\n      is_services_error_visible = _ref.is_services_error_visible,\n      toggleUnsupportedContractModal = _ref.toggleUnsupportedContractModal,\n      setHasOnlyForwardingContracts = _ref.setHasOnlyForwardingContracts,\n      resetPreviousSymbol = _ref.resetPreviousSymbol,\n      toggleServicesErrorModal = _ref.toggleServicesErrorModal,\n      resetPurchase = _ref.resetPurchase,\n      services_error = _ref.services_error,\n      switchAccount = _ref.switchAccount,\n      virtual_account_loginid = _ref.virtual_account_loginid;\n\n  var denialOfServiceOnCancel = function denialOfServiceOnCancel() {\n    window.open(Object(_common_url__WEBPACK_IMPORTED_MODULE_2__[\"urlFor\"])('trading', undefined, undefined, true));\n  };\n\n  var denialOfServiceOnConfirm =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return switchAccount(virtual_account_loginid);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function denialOfServiceOnConfirm() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var marketUnavailableOnConfirm = function marketUnavailableOnConfirm() {\n    setHasOnlyForwardingContracts(false);\n    resetPreviousSymbol();\n  };\n\n  var marketUnavailableOnCancel = function marketUnavailableOnCancel() {\n    return window.open(Object(_common_url__WEBPACK_IMPORTED_MODULE_2__[\"urlFor\"])('trading', undefined, undefined, true)) && setHasOnlyForwardingContracts(false);\n  };\n\n  var servicesErrorModalOnConfirm = function servicesErrorModalOnConfirm() {\n    toggleServicesErrorModal(false);\n\n    if (services_error.type === 'buy') {\n      clearPurchaseInfo();\n      resetPurchase();\n    }\n  };\n\n  var unsupportedContractOnConfirm = function unsupportedContractOnConfirm() {\n    window.open(Object(_common_url__WEBPACK_IMPORTED_MODULE_2__[\"urlFor\"])('user/portfoliows', undefined, undefined, true), '_blank');\n    unsupportedContractOnClose();\n  };\n\n  var unsupportedContractOnClose = function unsupportedContractOnClose() {\n    toggleUnsupportedContractModal(false);\n  };\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(App_Components_Elements_Modals_UnsupportedContractModal__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n    onConfirm: unsupportedContractOnConfirm,\n    onClose: unsupportedContractOnClose,\n    is_visible: is_unsupported_contract_modal_visible\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(App_Components_Elements_Modals_DenialOfServiceModal__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    onConfirm: denialOfServiceOnConfirm,\n    onCancel: denialOfServiceOnCancel,\n    is_visible: is_denial_of_service_modal_visible\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(App_Components_Elements_Modals_MarketUnavailableModal__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n    onConfirm: marketUnavailableOnConfirm,\n    onCancel: marketUnavailableOnCancel,\n    is_visible: is_market_unavailable_visible\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(App_Components_Elements_Modals_ServicesErrorModal__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n    onConfirm: servicesErrorModalOnConfirm,\n    services_error: services_error,\n    is_visible: is_services_error_visible\n  }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(AccountSignupModal, null));\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(Stores_connect__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(function (_ref3) {\n  var ui = _ref3.ui,\n      client = _ref3.client,\n      modules = _ref3.modules,\n      common = _ref3.common;\n  return {\n    is_denial_of_service_modal_visible: !client.is_client_allowed_to_visit,\n    is_market_unavailable_visible: ui.has_only_forward_starting_contracts,\n    is_services_error_visible: ui.is_services_error_visible,\n    is_unsupported_contract_modal_visible: ui.is_unsupported_contract_modal_visible,\n    proposal_info: modules.trade.proposal_info,\n    purchase_info: modules.trade.purchase_info,\n    resetPreviousSymbol: modules.trade.resetPreviousSymbol,\n    clearPurchaseInfo: modules.trade.clearPurchaseInfo,\n    resetPurchase: modules.trade.requestProposal,\n    services_error: common.services_error,\n    switchAccount: client.switchAccount,\n    setHasOnlyForwardingContracts: ui.setHasOnlyForwardingContracts,\n    toggleServicesErrorModal: ui.toggleServicesErrorModal,\n    toggleUnsupportedContractModal: ui.toggleUnsupportedContractModal,\n    virtual_account_loginid: client.virtual_account_loginid\n  };\n})(Modals));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9BcHAvQ29udGFpbmVycy9Nb2RhbHMvbW9kYWxzLmpzeC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL0FwcC9Db250YWluZXJzL01vZGFscy9tb2RhbHMuanN4Pzk2NzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0ICAgICAgIGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdTdG9yZXMvY29ubmVjdCc7XG5pbXBvcnQgeyB1cmxGb3IgfSAgZnJvbSAnX2NvbW1vbi91cmwnO1xuaW1wb3J0ICdTYXNzL2FwcC9tb2R1bGVzL21vZGFscy5zY3NzJztcbmltcG9ydCBVbnN1cHBvcnRlZENvbnRyYWN0TW9kYWwgZnJvbSAnQXBwL0NvbXBvbmVudHMvRWxlbWVudHMvTW9kYWxzL1Vuc3VwcG9ydGVkQ29udHJhY3RNb2RhbCc7XG5pbXBvcnQgTWFya2V0VW5hdmFpbGFibGVNb2RhbCAgIGZyb20gJ0FwcC9Db21wb25lbnRzL0VsZW1lbnRzL01vZGFscy9NYXJrZXRVbmF2YWlsYWJsZU1vZGFsJztcbmltcG9ydCBEZW5pYWxPZlNlcnZpY2VNb2RhbCAgICAgZnJvbSAnQXBwL0NvbXBvbmVudHMvRWxlbWVudHMvTW9kYWxzL0RlbmlhbE9mU2VydmljZU1vZGFsJztcbmltcG9ydCBTZXJ2aWNlc0Vycm9yTW9kYWwgICAgICAgZnJvbSAnQXBwL0NvbXBvbmVudHMvRWxlbWVudHMvTW9kYWxzL1NlcnZpY2VzRXJyb3JNb2RhbCc7XG5cbmNvbnN0IEFjY291bnRTaWdudXBNb2RhbCAgICAgICA9IFJlYWN0LmxhenkoKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tDaHVua05hbWU6IFwiQWNjb3VudFNpZ251cE1vZGFsXCIgKi8nLi4vQWNjb3VudFNpZ251cE1vZGFsJykpO1xuXG5jb25zdCBNb2RhbHMgPSAoe1xuICAgIGNsZWFyUHVyY2hhc2VJbmZvLFxuICAgIGlzX2RlbmlhbF9vZl9zZXJ2aWNlX21vZGFsX3Zpc2libGUsXG4gICAgaXNfdW5zdXBwb3J0ZWRfY29udHJhY3RfbW9kYWxfdmlzaWJsZSxcbiAgICBpc19tYXJrZXRfdW5hdmFpbGFibGVfdmlzaWJsZSxcbiAgICBpc19zZXJ2aWNlc19lcnJvcl92aXNpYmxlLFxuICAgIHRvZ2dsZVVuc3VwcG9ydGVkQ29udHJhY3RNb2RhbCxcbiAgICBzZXRIYXNPbmx5Rm9yd2FyZGluZ0NvbnRyYWN0cyxcbiAgICByZXNldFByZXZpb3VzU3ltYm9sLFxuICAgIHRvZ2dsZVNlcnZpY2VzRXJyb3JNb2RhbCxcbiAgICByZXNldFB1cmNoYXNlLFxuICAgIHNlcnZpY2VzX2Vycm9yLFxuICAgIHN3aXRjaEFjY291bnQsXG4gICAgdmlydHVhbF9hY2NvdW50X2xvZ2luaWQsXG59KSA9PiB7XG4gICAgY29uc3QgZGVuaWFsT2ZTZXJ2aWNlT25DYW5jZWwgPSAoKSA9PiB7XG4gICAgICAgIHdpbmRvdy5vcGVuKHVybEZvcigndHJhZGluZycsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB0cnVlKSk7XG4gICAgfTtcblxuICAgIGNvbnN0IGRlbmlhbE9mU2VydmljZU9uQ29uZmlybSA9IGFzeW5jICgpID0+IHtcbiAgICAgICAgYXdhaXQgc3dpdGNoQWNjb3VudCh2aXJ0dWFsX2FjY291bnRfbG9naW5pZCk7XG4gICAgfTtcblxuICAgIGNvbnN0IG1hcmtldFVuYXZhaWxhYmxlT25Db25maXJtID0gKCkgPT4ge1xuICAgICAgICBzZXRIYXNPbmx5Rm9yd2FyZGluZ0NvbnRyYWN0cyhmYWxzZSk7XG4gICAgICAgIHJlc2V0UHJldmlvdXNTeW1ib2woKTtcbiAgICB9O1xuXG4gICAgY29uc3QgbWFya2V0VW5hdmFpbGFibGVPbkNhbmNlbCA9ICgpID0+IHdpbmRvdy5vcGVuKHVybEZvcigndHJhZGluZycsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB0cnVlKSkgJiZcbiAgICAgICAgc2V0SGFzT25seUZvcndhcmRpbmdDb250cmFjdHMoZmFsc2UpO1xuXG4gICAgY29uc3Qgc2VydmljZXNFcnJvck1vZGFsT25Db25maXJtID0gKCkgPT4ge1xuICAgICAgICB0b2dnbGVTZXJ2aWNlc0Vycm9yTW9kYWwoZmFsc2UpO1xuICAgICAgICBpZiAoc2VydmljZXNfZXJyb3IudHlwZSA9PT0gJ2J1eScpIHtcbiAgICAgICAgICAgIGNsZWFyUHVyY2hhc2VJbmZvKCk7XG4gICAgICAgICAgICByZXNldFB1cmNoYXNlKCk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgY29uc3QgdW5zdXBwb3J0ZWRDb250cmFjdE9uQ29uZmlybSA9ICgpID0+IHtcbiAgICAgICAgd2luZG93Lm9wZW4odXJsRm9yKCd1c2VyL3BvcnRmb2xpb3dzJywgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHRydWUpLCAnX2JsYW5rJyk7XG4gICAgICAgIHVuc3VwcG9ydGVkQ29udHJhY3RPbkNsb3NlKCk7XG4gICAgfTtcblxuICAgIGNvbnN0IHVuc3VwcG9ydGVkQ29udHJhY3RPbkNsb3NlID0gKCkgPT4ge1xuICAgICAgICB0b2dnbGVVbnN1cHBvcnRlZENvbnRyYWN0TW9kYWwoZmFsc2UpO1xuICAgIH07XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICA8VW5zdXBwb3J0ZWRDb250cmFjdE1vZGFsXG4gICAgICAgICAgICAgICAgb25Db25maXJtPXt1bnN1cHBvcnRlZENvbnRyYWN0T25Db25maXJtfVxuICAgICAgICAgICAgICAgIG9uQ2xvc2U9e3Vuc3VwcG9ydGVkQ29udHJhY3RPbkNsb3NlfVxuICAgICAgICAgICAgICAgIGlzX3Zpc2libGU9e2lzX3Vuc3VwcG9ydGVkX2NvbnRyYWN0X21vZGFsX3Zpc2libGV9XG4gICAgICAgICAgICAvPlxuXG4gICAgICAgICAgICA8RGVuaWFsT2ZTZXJ2aWNlTW9kYWxcbiAgICAgICAgICAgICAgICBvbkNvbmZpcm09e2RlbmlhbE9mU2VydmljZU9uQ29uZmlybX1cbiAgICAgICAgICAgICAgICBvbkNhbmNlbD17ZGVuaWFsT2ZTZXJ2aWNlT25DYW5jZWx9XG4gICAgICAgICAgICAgICAgaXNfdmlzaWJsZT17aXNfZGVuaWFsX29mX3NlcnZpY2VfbW9kYWxfdmlzaWJsZX1cbiAgICAgICAgICAgIC8+XG5cbiAgICAgICAgICAgIDxNYXJrZXRVbmF2YWlsYWJsZU1vZGFsXG4gICAgICAgICAgICAgICAgb25Db25maXJtPXttYXJrZXRVbmF2YWlsYWJsZU9uQ29uZmlybX1cbiAgICAgICAgICAgICAgICBvbkNhbmNlbD17bWFya2V0VW5hdmFpbGFibGVPbkNhbmNlbH1cbiAgICAgICAgICAgICAgICBpc192aXNpYmxlPXtpc19tYXJrZXRfdW5hdmFpbGFibGVfdmlzaWJsZX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8U2VydmljZXNFcnJvck1vZGFsXG4gICAgICAgICAgICAgICAgb25Db25maXJtPXtzZXJ2aWNlc0Vycm9yTW9kYWxPbkNvbmZpcm19XG4gICAgICAgICAgICAgICAgc2VydmljZXNfZXJyb3I9e3NlcnZpY2VzX2Vycm9yfVxuICAgICAgICAgICAgICAgIGlzX3Zpc2libGU9e2lzX3NlcnZpY2VzX2Vycm9yX3Zpc2libGV9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgey8qIFRPRE86IEVuYWJsZSBBY2NvdW50U2lnbnVwTW9kYWwgb25jZSBpdHMgVUkgY29tcG9uZW50IGlzIHJlYWR5ICovfVxuICAgICAgICAgICAgPEFjY291bnRTaWdudXBNb2RhbCAvPlxuICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KCh7IHVpLCBjbGllbnQsIG1vZHVsZXMsIGNvbW1vbiB9KSA9PiAoe1xuICAgIGlzX2RlbmlhbF9vZl9zZXJ2aWNlX21vZGFsX3Zpc2libGUgICA6ICFjbGllbnQuaXNfY2xpZW50X2FsbG93ZWRfdG9fdmlzaXQsXG4gICAgaXNfbWFya2V0X3VuYXZhaWxhYmxlX3Zpc2libGUgICAgICAgIDogdWkuaGFzX29ubHlfZm9yd2FyZF9zdGFydGluZ19jb250cmFjdHMsXG4gICAgaXNfc2VydmljZXNfZXJyb3JfdmlzaWJsZSAgICAgICAgICAgIDogdWkuaXNfc2VydmljZXNfZXJyb3JfdmlzaWJsZSxcbiAgICBpc191bnN1cHBvcnRlZF9jb250cmFjdF9tb2RhbF92aXNpYmxlOiB1aS5pc191bnN1cHBvcnRlZF9jb250cmFjdF9tb2RhbF92aXNpYmxlLFxuICAgIHByb3Bvc2FsX2luZm8gICAgICAgICAgICAgICAgICAgICAgICA6IG1vZHVsZXMudHJhZGUucHJvcG9zYWxfaW5mbyxcbiAgICBwdXJjaGFzZV9pbmZvICAgICAgICAgICAgICAgICAgICAgICAgOiBtb2R1bGVzLnRyYWRlLnB1cmNoYXNlX2luZm8sXG4gICAgcmVzZXRQcmV2aW91c1N5bWJvbCAgICAgICAgICAgICAgICAgIDogbW9kdWxlcy50cmFkZS5yZXNldFByZXZpb3VzU3ltYm9sLFxuICAgIGNsZWFyUHVyY2hhc2VJbmZvICAgICAgICAgICAgICAgICAgICA6IG1vZHVsZXMudHJhZGUuY2xlYXJQdXJjaGFzZUluZm8sXG4gICAgcmVzZXRQdXJjaGFzZSAgICAgICAgICAgICAgICAgICAgICAgIDogbW9kdWxlcy50cmFkZS5yZXF1ZXN0UHJvcG9zYWwsXG4gICAgc2VydmljZXNfZXJyb3IgICAgICAgICAgICAgICAgICAgICAgIDogY29tbW9uLnNlcnZpY2VzX2Vycm9yLFxuICAgIHN3aXRjaEFjY291bnQgICAgICAgICAgICAgICAgICAgICAgICA6IGNsaWVudC5zd2l0Y2hBY2NvdW50LFxuICAgIHNldEhhc09ubHlGb3J3YXJkaW5nQ29udHJhY3RzICAgICAgICA6IHVpLnNldEhhc09ubHlGb3J3YXJkaW5nQ29udHJhY3RzLFxuICAgIHRvZ2dsZVNlcnZpY2VzRXJyb3JNb2RhbCAgICAgICAgICAgICA6IHVpLnRvZ2dsZVNlcnZpY2VzRXJyb3JNb2RhbCxcbiAgICB0b2dnbGVVbnN1cHBvcnRlZENvbnRyYWN0TW9kYWwgICAgICAgOiB1aS50b2dnbGVVbnN1cHBvcnRlZENvbnRyYWN0TW9kYWwsXG4gICAgdmlydHVhbF9hY2NvdW50X2xvZ2luaWQgICAgICAgICAgICAgIDogY2xpZW50LnZpcnR1YWxfYWNjb3VudF9sb2dpbmlkLFxufSkpKE1vZGFscyk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQWNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUhBO0FBT0E7QUFDQTtBQUNBO0FBSEE7QUFPQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFDQTtBQUhBO0FBU0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWZBO0FBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./App/Containers/Modals/modals.jsx\n");

/***/ }),

/***/ "./sass/app/modules/modals.scss":
/*!**************************************!*\
  !*** ./sass/app/modules/modals.scss ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zYXNzL2FwcC9tb2R1bGVzL21vZGFscy5zY3NzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc2Fzcy9hcHAvbW9kdWxlcy9tb2RhbHMuc2Nzcz9kMzc2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./sass/app/modules/modals.scss\n");

/***/ })

}]);